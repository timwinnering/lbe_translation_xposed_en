package com.xda_drm.lbe51_translation_en.translate;

import java.io.BufferedReader;
import java.io.FileReader;
import java.lang.reflect.Field;
import java.util.logging.Handler;

import com.xda_drm.lbe51_translation_en.R;

import android.content.res.Resources;
import android.content.res.XModuleResources;
import android.content.res.XResources;
import de.robv.android.xposed.IXposedHookInitPackageResources;
import de.robv.android.xposed.IXposedHookZygoteInit;
import de.robv.android.xposed.XposedBridge;
import de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam;

import de.robv.android.xposed.IXposedHookLoadPackage;
import de.robv.android.xposed.XposedBridge;
import de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam;


public class Translate_Strings implements IXposedHookZygoteInit, IXposedHookInitPackageResources{
    private static String MODULE_PATH = null;

    
    @Override
    public void initZygote(IXposedHookZygoteInit.StartupParam startupParam) throws Throwable    {
        // XResources.setSystemWideReplacement("android", "bool", "config_unplugTurnsOnScreen", false);
        MODULE_PATH = startupParam.modulePath;
        //      XposedBridge.log("XDA_DRM: Zygote Init ...");
    }

    @Override
    public void handleInitPackageResources(InitPackageResourcesParam resparam) throws Throwable    {
//      XposedBridge.log("XDA_DRM: Testing to Replacing LBE Strings ...");
        if (!resparam.packageName.equals("com.lbe.security"))
            return;

        ExceptionHandler handler = new ExceptionHandler();
       	Thread.setDefaultUncaughtExceptionHandler(handler);

//      XposedBridge.log("XDA_DRM: Replacing LBE Strings ...");
      XModuleResources modRes = XModuleResources.createInstance(MODULE_PATH, resparam.res);

      
//      XposedBridge.log("=============================");
//      XposedBridge.log("XDA_DRM: LBE Module Drawables");
//      Field[] fields = R.drawable.class.getFields();
//      String[] allDrawablesNames = new String[fields.length];
//      for (int  i =0; i < fields.length; i++) {           
//          allDrawablesNames[i] = fields[i].getName();
//          XposedBridge.log("XDA_DRM: LBE Drawables" + fields[i].getName());
//      }
//      
//      XposedBridge.log("XDA_DRM: LBE Module Strings");    
//      fields = R.string.class.getFields();
//      String[] allStringNames = new String[fields.length];
//      for (int  i =0; i < fields.length; i++) {           
//          allStringNames[i] = fields[i].getName();
//          XposedBridge.log("XDA_DRM: LBE Strings" + fields[i].getName());
//      }
//      XposedBridge.log("-----------------------------");
//      XposedBridge.log("XDA_DRM: LBE APK Strings");  
//      
//      fields = resparam.getClass().getFields();
//      fields = resparam.getClass().getField("Stringres").getClass().getFields(); 
// //     fields = modRes.getClass().getFields();
//      String[] allApkStringNames = new String[fields.length];
//      for (int  i =0; i < fields.length; i++) {           
//          allApkStringNames[i] = fields[i].getName();
//          XposedBridge.log("XDA_DRM: LBE Strings" + fields[i].getName());
//      }
//      XposedBridge.log("^^^^^^^^^^^^^^^^^^^^^^^^^^^^^");

try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Action_Prompt_Colored","<font color=#FF8A00> Ask </font>"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Action_Accept_Colored","<font color=#478800> Allow </font>"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Action_Reject_Colored","<font color=#DF0000> Reject </font>"); } catch(RuntimeException e) { };

try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Action_Prompt","Ask"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Action_Accept","Allow"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Action_Reject","Reject"); } catch(RuntimeException e) { };


try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Group_Expense","Safety-related"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Group_PIM","Personal Information"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Group_Location","Location"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Group_PhoneID","Phone Info"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Group_Internet","Access to the network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Group_DataPrivacy","Privacy-related"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Group_ROOT","ROOT"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SendSMS","Send SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SendSMS_Desc","Send text messages"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SendSMS_Hint","%1$s may send SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Call","Call"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Call_Desc","Dial, answer or hang up the phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Call_Hint","%1$s may dial, answer or hang up the phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_CallState","Call Status"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_CallState_Desc","Get phone calls, call, hang up and other state"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_CallState_Hint","%1$s may get information about calls and status"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_CallMonitor","Call monitor"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_CallMonitor_Desc","Listener call content, control volume, etc"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_CallMonitor_Hint","%1$smay monitor calls and set volume"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Location","Location"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Location_Desc","Through a network or on your mobile phone positioning satellite"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Location_Hint","%1$smay locate your phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_PhoneID","Mobile identification number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_PhoneID_Desc","Get your phone PIN, including IMEI, IMSI, phone number, etc"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_PhoneID_Hint","%1$smay get your IMEI"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_MobileNetwork","Networking via 2G/3G networks"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_MobileNetwork_Desc","Networking via 2G/3G networks"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_MobileNetwork_Hint","%1$smay access network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_WIFINetwork","Networking via Wifi network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_WIFINetwork_Desc","Networking via Wifi network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_WIFINetwork_Hint","%1$smay access network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Network_UnknownAddr","Unknown address"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Network_MobileEvent","use 2G/3G network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Network_WIFIEvent","use WIFI network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Network_Accept","Accept data from %1$s connection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Network_Connect","Connect to %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Network_Listen","Monitor the local port %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Network_Recv","Receive Data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Network_Send","Transmit data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SMS","SMS record"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SMS_Desc","Access your SMS inbox"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SMS_Hint","%1$smay read SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Contact","Contact records"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Contact_Desc","Access your contact list"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Contact_Hint","%1$smay access conntacts"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_CallLog","Call records"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_CallLog_Desc","Access your call records"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_CallLog_Hint","%1$smay access call history"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_ROOT","ROOT permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_ROOT_Desc","Highest Access Level to all your Data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_ROOT_Hint","%1$s requests Permission for root"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Settings","System Settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Settings_Desc","Modify System Settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Settings_Hint","%1$s may change system settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Recorder","Taking photographs and recording"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Recorder_Desc","Taking photographs and recording"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Recorder_Hint","%1$smay take pictures"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SendSMS_Recipient","Addressee"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SendSMS_Content","Content"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SendSMS_SMSC","SMS center number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SendSMS_SMSC_Default","The default SMS center"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SendSMS_Port","Destination port"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SendSMS_Data","Send the message to %1$s:%2$d"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SendSMS_Text","Send the message to %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Call_Number","Call %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Contact_Access","Read contact data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SMS_Access","Read the short message data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_CallLog_Access","Read call log"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Settings_Modify","Modify System Settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Location_Source_Network","Source : Wi-Fi"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Location_Source_GPS","Source : GPS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Location_Source_Cellular","Source: cell site"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Location_CellLocation","Obtain cell site location"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Location_CellInfo","Obtain cell site information"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Location_Monitor","Track your location"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Location_Access","Get your current location"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_PhoneID_IMEI","Get IMEI number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_PhoneID_IMEISN","Get IMEI SN number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_PhoneID_ICCID","Get the SIM card serial number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_PhoneID_Number","Get the phone number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_PhoneID_IMSI","Get IMSI number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_AllowAll","Allow all"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_PromptAll","All Tips"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_RejectAll","Reject All"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_ROOT_Title","Get ROOT permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_ListenCallState","Monitor the incoming state"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_GetCallState","Get the current call status"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_EndCall","Hang up the phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_AnswerCall","Incoming call"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SilenceRinger","Silent ringtone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_CancelMissedCalls","Clear missed call records"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_AdjustVolumeInCall","Adjust the volume during a call"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_AdjustRingerVolume","Adjust the ringer volume"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_RecordAudio","Audio Recording"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_RecordVideo","Video Recording"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Picture","Photographs"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "app_name","LBE Security Master"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Low_Memory","Phone memory is exhausted ! Delete some files to free up space."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "download_unknown_title","Untitled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "notification_filename_separator",", "); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "notification_filename_extras","and%d more"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "notification_download_complete","Download complete"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "notification_download_failed","Download unsuccessful"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "notification_need_wifi_for_size","Download size requires Wi-Fi"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "wifi_required_title","Download too large for operator network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "wifi_required_body" ,"You must use WiFi to complete this %s download. Click%s to begin this download the next time you are connected to a WiFi network."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "wifi_recommended_title","Queue for download later?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "wifi_recommended_body" ,"Starting this %s download now may shorten your battery life and / or result in excessive usage of your mobile data connection, which can lead to charges by your mobile operator depending on your data plan. &#160;Click%s below to begin this download the next time you are connected to a WiFi network."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "button_queue_for_wifi","Queue"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "button_cancel_download","Cancel"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "button_start_now","Start now"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "more_options","More features"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "copyright","Copyright © 2012-2013 LBE Security Master &#160;All Rights Reserved"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "share_desc","I am using LBE Security Master protect my phone, Block calls and messages, advertising, protect privacy, access control. Try it ! Download Link : http://www.lbesec.com or on http://forum.xda-developers.com/"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "visit_website","Visit website"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "attention_sina_weibo","Follow Us"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "begin_use","Getting Started"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "share_to","Share"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "rate_to","Evaluation to"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "current_version","The current version"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "recommend_lbe_master","Recommended LBE Security Master"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "already_block","Has blocked"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Download_NoSd_Hint","No SD card, insert the SD card to complete the download"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "miui_step_5","5 . Congratulations ! Complete the setup, you can normally use text messaging blocked."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "miui_step_4","4 Click Close \"System Message Priority\", which allows third-party application intercepts the SMS notification."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "miui_step_3","3 Slide the list in the end portion, click on \"Advanced Settings\""); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "miui_step_2","2 Click the phone menu button, the pop-up menu, click on \"Settings\""); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "miui_step_1","1 Click \"SMS \"icon to open the SMS main interface."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "call_number","Call"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "ok","Determine"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "cancel","Cancel"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "completed","Complete"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "continuation","Continue"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "close","Close"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "delete","Delete"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "uninstall","Uninstall"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "miui_sms_block_desc","MIUI system default priority on SMS intercept, if you want to use LBE Security Master blocking spam messages, you need to configure the following"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "block_error_desc","Intercept error description"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "call_phone_error","No cards or network anomalies, can not make calls"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "block_error_tips_message","When blocking mode select \"Off \", \"empty number \", \"stop\" mode, if you encounter MMI code error, please call forwarding feature, you can directly dial telephone operator services directly open ( free )."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "soft_manager_mem","Memory"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "soft_manager_sdcard","SD"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "phone_accelerator_cpu","CPU"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "phone_accelerator_ram","RAM"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "hold_to_scan","To be scanned"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "finish_scan","The scan is complete"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "add","Add"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "add_numeric","Add ( %1$d )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "application","Applications"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "call","Dial"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "settings","Set up"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "ad_scan_num","%1$d/%2$d"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "notification_contain_adware","Containing advertising"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "notification_need_config_perm","You need to configure permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "special_thanks","Special thanks to: LemonCC,℡秋殇�?��?�葉�?�,lol_recovery,路易什么,阿汤哥,斌崽,GTRZ,泠�?�?,oonly,留�?�?,混沌 and other users, Translation to English by VuHien, Correction by Xda_drm"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "thanks_tips","Thank you for these lovely user help LBE progress ^ _ ^"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Adware_Number_Contain","%1$d containing adware"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_AdwareApp_Number","Containing adware :%1$d a"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Title","Contains adware may have the following behavior:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Get_Phone_Status","Gets the phone status information"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Get_Location","Gets your location"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Audio_Controll","May control handset volume"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Write_Sdcard","Read and write SD card"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Read_Sdcard","Read and write SD card"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Get_Apn_Info","Gets the mobile network information"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Get_Wifi_Info","Gets WIFI information"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Change_Wifi_Status","Changing the WIFI status "); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Read_SMS","Read SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Read_Contact","Read phone contacts"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Read_Log","Read phone logs"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Make_Call","Phone Calls"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Open_Camera","Open the Camera"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Write_Browser_Bookmark","Adds mobile browser bookmarks"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior_Send_SMS","Send SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Behavior","Ad Behavior"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Plugin","Adware"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Style","Ad style"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Style_Notification","Send notification bar ads"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Style_Banner","Popup ads Article"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Style_Credits_Wall","Popup ads integral wall"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Style_App_List","Application List"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Style_Force_Window","Popup ads"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Notification_Ticker","Found adware"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Notification_Content","Found adware, Click here for details"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Detail_Activity_Title","Ad Details"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Uninstall_App","Uninstalling the software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Block_App","Block ads"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Ublock_App","Unmask"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Expo_Activity_Title","Ad block"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Scan_Activity_Title","Ad Scan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_No_Adware_App","Found no adware"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Risk_App","Apps to be reviewed (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_No_Risk_App","Without risky Adware (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_No_Exist_App","No Adware"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Already_Blokced","Advertising blocked"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_OneClick_Diable","Oneclick Disable"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Cancel_Scan","Cancel a scan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_User_Feedback","User feedback"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_AdwareSet_Update_Success","Ad blocking the update is successful"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_AdwareSet_Update_Content","Advertising sample library updated to version %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Report_Success_Toast","You have successfully fed back to the LBE Security Master"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Antiadware","Ad block"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Antiadware_Dsc1","Make the ad scan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Antiadware_Dsc2","Have been scanned, blocking malicious ads"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Adware_App","Including advertising programs"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Adware_Literal_Version","Advertising sample library version :%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Adware_Uninstall_Prompt","Whether uninstall %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Adware_Onekey_Block","Oneclick risk AD Block"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Last_Scan_Time","Last Scan Time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Scan","Ad Scan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Report","Report ad"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Report_Hint","If you find no adware detection, please report"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Report_Success_Hint","You have successfully reported advertising applications, thank you"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Scan_Day_Ago","%1$d days ago"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Scan_Long_Ago","Long time no check"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Scan_Today","You just checked today"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Scan_Again","Ad Scan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Install_App","Installed Software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Sys_App","System Software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AD_Number_App","An application containing advertising"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_Title","Antivirus"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_Result","Virus scan results"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_FastScan","Quick Scan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_FastScan_Des","Rapid detection of all installed applications"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_DeepScan","Deep Scan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_DeepScan_Des","Strengthen the detection of all installed software and SD card"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_RelTimeScan","Real-time virus scanning"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_NoScan","No virus scan recording"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_NoResult","Regular testing, wholesome"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_NotDeep","just a quick scan .."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_Waiting","Queue waiting"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_WaitingResume","The scan engine is busy, please wait a moment"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_ScanFail","Virus scan engine exception Samples of the virus might be your library or antivirus engine does not match the cause, it is recommended to update the latest version of the antivirus engine and virus sample library. "); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_Check_Upgrade","Check for updates"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_AutoUpdate_Title","Automatic upgrade check cycle"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_AutoUpdate_NoTip","Never check"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_AutoUpdate_period","%1$s check again"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_Update_Local","Virus database is being upgraded through a local"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_Update_CurrentVer","Virus database version: %1$s ( %2$s )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_ScanInstalled","Scan installed applications:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_ScanAppsInSD","Scanning is not applied to install:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_CancelScan","Cancel a scan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_Settings_Title","Antivirus set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_Init","Starting antivirus engine"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_Cancel_Message","Antivirus has not been completed, whether to terminate the scan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_Clean","OneCLick clean-up (%1$d threat )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_Cleaning","Being cleaned"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_ScanResult_Pending","Wait Clear"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_ScanResult_Skip","Skip"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_ScanResult_Succeed","Clear Success"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_NoVirus","Your phone is safe.Remember to check later"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_NoVirus1","Your phone is safe"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_NoVirus2","OK,but emember check later"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_ScanProgress","Is the background scan: %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_ScanNewApp","Scanning :%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_ScanNewApp_Virus","In %1$s threat is detected, immediately clear"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_Prompt","In %1$s threat is detected %2$s Please immediately clear"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_PromptMid","In %1$s risk projects detected %2$s Whether to clear ?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_StoragePath","Located"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_VirusDetail1","Specific"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_VirusDetail2","Harm"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_ToolStoragePath","Risk Tool Location"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_DangerLevel_High","Danger"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_DangerLevel_Mid","Warning"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_ScanCleanLog","Killing Logs"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_ClearLog","Empty log"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_NoneLog","No Log"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_ScanResultReport_Report","Scan files :%1$d, virus :%2$d, warning :%3$d, clear :%4$d"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_LastScanResult","%1$s%2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_LastScanResult_Safe","Scanning %1$d apps, no threat found"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_LastScanResult_Warn","Scanning %1$d apps found %2$d threats"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_LocalUpdate","SD card virus database upgrade"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_LocalUpdate_Des","Local upgrade version is: %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "AV_Copyright","Powered by Antiy AVL SDK antivirus engine"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery","Battery Optimize"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Settings","Power Save Settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Backup","Energy-saving programs, regular programs and personalized configuration"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_SavingModes","Power Saving Modes"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_SavingMode_Des","Each program is kind of unique lifestyle"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_NightMode","Night Mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_NightMode_Des","Improve your quality of life at rest"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_CustomModes","Personalized saving"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_CustomModes_Des","My phone, my life style"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_BatteryLog","Saving assistant logs"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption","Battery Consumption"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption_Des","Power, to play with Tiger flies"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Logs","Battery log"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Logs_Des","Saving services every move, always grasp"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Bright_Resume","Screen brightness will be restored after exiting this page"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Bright_CheckTitle","Minimum screen brightness detection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Bright_CheckMsg","Lowest screen brightness detection, may cause your phone screen dims short, do not worry."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Bright_Check","Detect"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Bright_Next","Maybe next time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Bright_Cancel","No Sense"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Bright_Min","LBE recommended minimum brightness of your screen is limited to %1$d%%, protected screen eyesight"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Delete_BatteryMode","Delete the current power plan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Delete_BatteryModeTip","Whether to delete the current power plan ? Remove power scheme may affect Night Mode tasks with personalized configuration, Please handle with caution ."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Delete_Night","Delete the current Night Mode tasks"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Delete_NightTip","Delete this Night Mode tasks"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Delete_Trigger","Delete the current personalized configuration"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Delete_TriggerTip","Whether to delete the current configuration, personalized task"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_BatteryStatusLog","Battery log"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Add_NewMode","+ New Power Saving Modes"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Add_NewNight","+ New Night Mode plan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Add_NewTrigger","+ New personal and exclusive"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Add_CustomAction","Specify Behavior"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Mode_Edit","Editing saving Plan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Mode_Select","Select the power Plan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Mode_CustomName","Custom Mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Mode_CustomComment","Personal preferences saving Plan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Backup_Mode","Backup mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Mode_Modify","Adjustment"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Mode_NoRunningMode","Not enable any power Plan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Night_DefaultComment","I'm lazy, did not leave a comment ( I )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_TimePeriod_Start","Start time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_TimePeriod_End","End Time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Trigger_Battery","Trigger -based battery status"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Trigger_Battery_Des","Optional charging, discharging, battery and other circumstances"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Trigger_Screen","Screen-based state triggering"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Trigger_Screen_Des","Optional screen turns off, open the other circumstances"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Trigger_TopApp","Triggered based on the specified application starts"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Trigger_TopApp_Des","Optional start icon with the application of"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Trigger_Condition","Triggering conditions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Trigger_Operation","Trigger operation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Trigger_Phone","Phone-based state triggering"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Trigger_Phone_Des","The optional signal strength, base station location and other circumstances"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Trigger_InvalidCondition","Please configure the trigger condition in the previous step"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Trigger_InvalidAction","Please configure the action items on this page"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_ChargeOn","Start charging ( charging cable insertion )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_ChargeOff","Stop charging ( unplug the charging cable )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_LevelChange","<font color=#17A4F5> <U>%1$s </U> </font>, <font color=#17A4F5> <U>%2$s </U> </font> Effective"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_Level","Battery %1$d%% (%2$s%3$d%%)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_LevelFull","The battery is full 100%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_LevelLow","Battery low %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_LevelChanged_Des","Based on changes in electricity"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_ScreenOn","On the screen"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_ScreenOff","Screen off"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_TopApp","%1$s start"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_AppExit","%1$s retreat into the background"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_NotEqual","Power is not equal to %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_Equal","Electricity equal to %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_Smaller","Capacity is less than %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_Bigger","Power is greater than %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_BatteryFull","The battery is fully"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_BatteryLow","Battery is low (<%1$d%%)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_BatteryUsing","Battery use"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_Charging","Charging"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_AppForeground","Front running"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_AppBackground","Return back"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Condition_Can_Use","You can also use"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Action_KillSelf_ByLauncher","This application exits clean their background"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Action_KillApp","OneClick clean-up"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Action_LimitCPU","CPU frequency limit"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Action_PlayNotif","Play tone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Action_KillApp_Tip","The project started cleaning up background application"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Action_PlayNotif_Tip","The tone is played when the project starts"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Action_KillSelf_Tip","The project to clean up their own back exit"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Action_LimitCPU_Tip","The project started when the CPU frequency limit"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Action_ActiveModeDes","Activate the specified power Plan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Action_ActiveMode","Activate <font color=#17A4F5>%1$s</font>"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Action_ActiveAct","Perform the specified operation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Action_MemFreed","Release %1$s memory"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Action_DelayExecute","Delayed trigger"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_Empty","There are no additional conditions for it. Want more, you can contact us QQ or Twitter"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_AddNew","+ More exception condition"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_Skip","Skip this mission"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_Condition","Exception condition"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_ActiveDelay","Delay effect, can effectively prevent repeat"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_Delay","Delay Time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_DelayTime","%1$s, %2$s trigger delay"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_DelayTime_Simple","When the conditions are met, the delay %1$s execution. Delay execution do not meet the criteria, skip this task"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_Extra","Expert-level expansion set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_CantRestoreAct","You choose a one-time operation, without reduction"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_CantRestoreCon","You can not reverse the selected trigger condition is triggered"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_Restore","Auto- restore feature is turned off"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_RestoreMode","Restored to the state before the trigger"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_RunningPkg","Specific applications running in the foreground is invalid"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_TimeDes","Invalid within a specific time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_PhoneDes","Particular state is invalid"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_Screen","Invalid when a particular screen"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_ScreenOn","The screen is turned invalid"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_ScreenOff","Screen off when inactive"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_Charge","Specific battery state is invalid"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_ChargeOn","When charging is invalid"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_ChargeOff","Battery life is invalid"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_RunDes","Skipped when running in the foreground of this task"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_Conflit","Conflict exception condition has been automatically removed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Exception_Invalid","Invalid"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Restore_CPU","CPU frequency recovery"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Restore_Auto","Automatic recovery"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Week_Monday","Monday"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Week_Tusday","Tuesday"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Week_Wednesday","Wednesday"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Week_Thursday","Thursday"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Week_Friday","Friday"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Week_Saturday","Saturday"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Week_Sunday","Sun"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_NightMode_Delay","When you activate the time period of the program used the phone, lock screen and no phone %1$s to reactivate the program after"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_NightMode_NoDelay","When you activate the time period of the program used the phone, to maintain the status quo after the change"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_NightMode_Edit","Edit Night Mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_NightMode_Enter","Night Mode begins"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_NightMode_Exit","After clocking modes"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_NightMode_Effective_Date","Effective Date"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_NightMode_Start_Date","Start-up time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_NightMode_Delay_Event","Delay events"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_NightMode_Start","Start operation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_NightMode_Stop","The end of the operation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_HardwareConsumption","Hardware power"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_HardwareConsumption_None","No hardware power consumption data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_SoftwareConsumption","Software power"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_SoftwareConsumption_None","No software power consumption data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption_CPU","CPU usage time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption_CPU_FG","Reception time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption_GPS","GPS time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption_Service","Background service execution times"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption_WakeCnts","CPU wakeups"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption_WakeTime","CPU wake-up time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption_Wakeups","Wakeups"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption_Dataflow","Data Consumption"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption_Sensor","Other sensors use Length"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption_TimeUsed","%1$.1fs"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption_CntUsed","%1$d"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption_StatisticTime","Timeframe:%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Consumption_Save","LBE Security Master to help you quit %1$s background task processes, cell phone battery extended using 8 minutes."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Error_WrongItem","Parameter error, can not be edited"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Error_WrongCondition","Error triggering conditions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Error_TooShortTimePeriod","Start time and end time interval is too short, reconfigure"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Error_InvalidDayOfWeek","One week at least one day effectively, reconfigure"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_Wifi","WIFI"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_APN","Mobile Data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_Sync","Data Synchronization"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_Bright","Screen brightness"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_GPS","GPS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_LockTime","Lock screen timeout"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_Haptic","Touch"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_AirMode","Flight mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_Bluetooth","Bluetooth"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_Volume","Volume"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_Volume_M","Volume adjustment is %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_VolumeAlarm","Alarm Volume"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_VolumeAlarm_M","Alarm volume was adjusted to %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_VolumeDTMF","Dial volume"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_VolumeDTMF_M","Dial the volume adjusted to %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_VolumeMusic","Music volume"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_VolumeMusic_M","Multimedia music volume adjusted to %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_VolumeNotif","SMS volume"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_VolumeNotif_M","SMS and call volume adjustment is %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_VolumeRing","Ringer Volume"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_VolumeRing_M","Ringer volume is adjusted to %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_VolumeSystem","System volume"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_VolumeSystem_M","System volume was adjusted to %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_VolumeVoice","Call volume"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_VolumeVoice_M","Call volume was adjusted to %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_Vibration","Vibration"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_Rotation","Automatically switch screen"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_RotationAutoOff","Turn off automatic transfer panel"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_Orientation","Screen orientation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_Rotate_0","Vertical screen"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_Rotate_90","Horizontal screen"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_Rotate_180","Reverse vertical screen"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_Rotate_270","Reverse horizontal screen"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_RunPkg","Run the application"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_ChangingApn","Data link status has changed, wait a moment to take effect"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_NotSupport_GPS_AIR","Open the active defense, the use of GPS and flight mode automatic switching function"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_NotSupport_GPS","Open the active defense, the use of GPS positioning function automatically switches"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_NotSupport_GPS2","Your system does not support automatic switching GPS, please know"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Shortcut_NotSupport_AIR","Open the active defense, the use of automatic flight mode switch function"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_ChargingLeft_Fast","Fast charging time remaining"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_ChargingLeft_Continue","Continuous charging time remaining"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_ChargingLeft_Tick","Trickle charging time remaining"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_ChargeFull_Left","Charge completion time available"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Discharge_Left","Battery time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Tips_BatteryLeft","Battery time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Result_Mute","Mute"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_BatteryMode_Change","Enabled %1$s, %2$s can also be used"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_ScreenBrightness","Screen brightness"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_VolumnAlarm","Alarm Volume %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_VolumnNotif","SMS and notification volume %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_VolumnRing","Caller ring volume %1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_VolumnAuto","The current volume using the phone, do not change from"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_HardwareConsumption_Radio","Communications power"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_HardwareConsumption_Wifi","Wireless Network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_HardwareConsumption_Screen","Screen consumption"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_HardwareConsumption_Screen_Setting","Screen settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_HardwareConsumption_BT","Bluetooth power"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_BatteryInfo_Edit","Power correction"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_BatteryInfo","Battery Information"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_BatteryInfo_BatteryHealth","State of health"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_BatteryInfo_HealthGood","Good health"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_BatteryInfo_HealthBroke","Battery failure"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_BatteryInfo_MaxElectricity","Maximum power"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_BatteryInfo_CurrentElectricity","Current consumption"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_BatteryInfo_Temperature","Battery temperature"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_BatteryInfo_Voltage","Battery voltage"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_BatteryInfo_Technology","Battery Technology"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_AvailableTime_Detail","Details available time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_AvailableTime_CurrentBattery","Battery time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_AvailableTime_2gCall","2G talk"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_AvailableTime_3gCall","3G talk"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_AvailableTime_3gInternet","3G Internet"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_AvailableTime_WifiInternet","WIFI Internet access"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_AvailableTime_Movie","Movies"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_AvailableTime_Music","Music playback"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_AvailableTime_Bluetooth","Bluetooth"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_AvailableTime_Gps","GPS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_AvailableTime_3dGame","3D games"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_AvailableTime_2dGame","2D games"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_AvailableTime_Read","Read the article"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_AvailableTime_MovieOnLine","Online movie player"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Mode_BatteryModeName","Mode Name"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Mode_BatteryModeNameNull","No schema name"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Mode_BatteryModeTips","Mode Description"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Mode_BatteryModeTipsNull","No pattern description"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Mode_ScreenPreference","Screen"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Mode_BatteryDuration_Days","%1$d days %2$d hours"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Mode_BatteryDuration_Hours","%1$d of %2$d hours"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Mode_BatteryDuration_Minutes","%1$d minutes"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Database_Mode_Text_Old","Mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Database_Mode_Text_New","Program"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Database_NightMode_Name","Rest of the night program"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Database_NightMode_Comment","Good rest, from disturb Use"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Database_IdleMode_Name","Everyday applications"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Database_IdleMode_Comment","Suitable for home, work, school everyday use"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Database_AdvanceMode_Name","Strengthen the standby program"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Database_AdvanceMode_Comment","Fit out road use"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Database_SuperMode_Name","Limit saving Plan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Database_SuperMode_Comment","Low battery use, protect the battery"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Database_RestDayNightMode_Name","Closed Friday night plans"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Database_RestDayNightMode_Comment","Good night's rest day use set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Database_NightPlan_Name","Night's rest plan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Database_NightPlan_Comment","Suitable for use at night working set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Service_Start","^ _ ^, Batteries assistant is Here"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Service_Stop" ,"%> _ <%, The battery assistant laid off"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_NightMode_Entered","%1$s has been activated and is expected to end after %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_NightMode_WillDelay","Phone use ,%1$s to defer to the lock screen and no phone starts after %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_NightMode_Delay","%1$s in %2$s after the start"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_NightMode_Exit","%1$s next start, scheduled for after %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_NightMode_ScreenOff","Screen off, delay %1$s, start %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_NightMode_Error","Configuration exception :%1$s (%2$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_NightMode_EnterDes_Start","%1$s start"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_NightMode_EnterDes_Freed","Release %1$s memory"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_NightMode_EnterDes_Execute","Activate %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_NightMode_ExitedDes_Stop","%1$s End"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_NightMode_ExitedDes_Recover","Recovery %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_NightMode_ExitedDes_Ring","Ring to remind"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Trigger_Delay","%1$s, %2$s delay"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Screen_Bright_Des","Adaptive"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_FullScreen_Bright_Des","Screen brightness is adjusted to %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_ScreenLock_Des_Timeout","%1$s lock screen timeout"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_ScreenLock_Des_NoTimeout","No timeout lock screen"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Cpu_Des_Sleeping","Sleep"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Cpu_Des_Frequency","Operating frequency"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Trigger_Des_When","When the"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Trigger_Des_Moment","Time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_TimePeriod_Des_To","To"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_TimePeriod_Des_SecondDay","The next day"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Night_Repeat_Des_EveryDay","Weekly"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Night_Repeat_Des_Monday","A"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Night_Repeat_Des_Tuesday","Two"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Night_Repeat_Des_Wednesday","Three"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Night_Repeat_Des_Thursday","Four"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Night_Repeat_Des_Friday","Five"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Night_Repeat_Des_Saturday","Six"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Night_Repeat_Des_Sunday","Day"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_TimeTask","Night Mode tasks"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Condition_BatteryUsing","Use"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_Air","Flight mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_BT","Bluetooth"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_Data","Data network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_GPS","GPS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_HYPTIC","Vibration touch"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_Wifi","WIFI"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_Rotate","Automatically switch screen"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_Orientation","Screen orientation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_Sync","Data Synchronization"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_KillApp","The end of the background process"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_LimitCpu","CPU frequency limit"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_Ring","Play notification sound"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_Bright","Screen brightness"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_LockTime","Lock screen timeout"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Tips_Volume","Volume"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Log_Change","Change"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Service","Saving optimization services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Show_Notif","Prompt notification bar"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Show_NotifDes","System notification bar shows the battery status in real time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_ShowToast","Phone alert status changes"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_ShowToastDes","Notify you when saving changes to optimize your phone status"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_CheckBright","Minimum screen brightness detection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_CheckBrightDes","Detect mobile screen brightness can reach a minimum"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Service_Autostart","Saving optimization services enabled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Battery_Capacity_Unit","mAH"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Backup","Custom desktop shortcut"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Traffic","Real-time traffic"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Traffic_None","No traffic data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Shortcut","Shortcuts"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Process","Process Management"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Process_None","No running process"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Launch","Click to enter security master"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_CPU","%1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_RAM","%1$d%%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_CPU_Hint","CPU:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_RAM_Hint","Memory:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Traffic_Hint","Today:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Clean_Shortcut","OneClick clean-up"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Clean_Later","Your phone has reached the best condition"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Task_Num","%1$d a"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Net_ConnCount","%1$d connections"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Close_All","All off"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Set_Launch_Mode","Set the Startup Mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Unlock_Type_Pattern","Current ways to unlock : Unlock graphics"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Unlock_Type_Password","Current ways to unlock : Unlock password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Choose_Unlock_Type","Select Unlock Mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Password_Setting","Password Settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Recommend_Setting","Recommended setting"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Recommend_Setting_Desc","You can set the white list, to avoid the application is shut down when a key clean. You can also set from Kai managed to avoid the application starts at boot time."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_White_List","WhiteList"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_AutoStart_Manage","Since the launch of Management"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "airplane_mode","Flight mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "bluetooth","Bluetooth"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "screen_brightness","Screen brightness"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "haptic_feedback","Touch"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "sync","Synchronous"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "wifi","WIFI"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "gps","GPS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "mobile_network","Mobile network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "screen_rotation","Screen Rotation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_No_Apps_Running","No running software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Shortcut_Switch","Quick switch"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "delete_fail","Delete failed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "add_fail","Add Failed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "exit_edit_mode_to_add","Exit edit mode to add"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "can_not_launch_app","Could not start application, may not be installed or has been uninstalled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "lbe_function_item","LBE functional items"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "one_key_clear_already_add_to_desktop","OneClick clean-up has been added to your desktop"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_Desc","Desktop Shortcut"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_FirstUse_Hint","Please choose your favorite way to start the LBE Desktop shortcut:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_Guide_SetDefault","Click the \"OK\", check the \"Set as Default Options\" and then find and click \"LBE Task Manager \"to complete the task manager settings LBE"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_Guide_ClearDefault","Click \"OK\" to find the \"Clear Defaults\" and click to complete the task manager settings LBE"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_HardwareKey","Start using the system keys"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_HardwareKey_Home","Home key to start"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_HardwareKey_Home_Method","Home key start-up mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_HardwareKey_Home_Method_Single_Tap","Click the Home button to start"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_HardwareKey_Home_Method_Double_Tap","Double-click the Home button to start"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_HardwareKey_Home_PreferredLauncher","Start the desktop of choice"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_HardwareKey_Home_Launcher_Select","Starter selection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_HardwareKey_Search","Long press the search button to start"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_FloatWindow","Start using floating window"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_FloatWindow_Desc","Dropzone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_FloatWindow_LauncherOnly","Show only floating window on the desktop"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_Notification","Start using the system notification bar"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_Notification_Desc","Click Start LBE system notifications"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Shortcut_HardwareKey_NotSupported","Your phone does not support"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "app_name_beta","LBE Security Master ( beta )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "app_task_manager","LBE Task Manager"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Loading","Loading..."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Operating","Executing..."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_InvalidInput","Input parameter is incorrect"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Version","Version :%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_SystemApp","System Software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_UserApp","Your software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Copyright","LBE group produced"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Beta","Beta version, do not spread"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Beta_NotFound_Device","Sorry, your device is not within the scope of closed beta, please use the official version"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Configuration","Set up"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Configuration_Backup","LBE Security Master setting items"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Canceling","Cancelling..."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Service_Enabled","Service is open"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Service_Disabled","Service has been shut down"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Summary_Enabled","Enabled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Summary_Disabled","Disabled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Add","Add"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Clip","Uninstall"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Enable","Open"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Disable","Close"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Enabled","Enabled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Disabled","Disabled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Blocked","Block"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Restore","Unblock"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Optimize","Check"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Ignore","Ignore"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Allow","Have allowed (%d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Forbid","Disabled (%d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Repair","Repair"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Edit","Edit"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Adjust","Adjustment"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Auto","Automatic"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Accept","Allow"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Prompt","Prompt"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Reject","Block"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Check","Inspect"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Remove","Remove"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Clean","Clean"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Start","Start"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Running","Operation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Cleaned","Has been cleaned"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Finished","Complete"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_CustomClean","Manual cleaning"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Good","Good"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Detail","Detailed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Default","Default"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Shortcut","Shortcut menu"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Return","Return"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Save","Save"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_SelectAll","Select"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Select","Choose"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Clear","Empty"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Delete","Delete"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_More","More"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Inform","Restored to the phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Empty","No data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_SelectReverse","Invert selection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_ON","ON"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_OFF","OFF"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_NoTipsNextShow","Know it"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_NextPage","Next"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_NextStep","Next"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_PrevStep","Previous"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Enabled_2","Enabled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Disabled_2","Click to open"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Exception","Unopened"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Setting","Set up"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Finish_Setting","Complete the setup"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Date_Formatter","MM-dd-yy HH:mm"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Time_Formatter","HH:mm"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Time_Day","Day"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Time_Hour","Hour"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Time_Minute","Minute"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Time_Second","Second"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Time_Zero","Zero"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Time_Never","Never"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Time_Small","Recently"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Success","Success"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Failure","Failure"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Generic_Delete_Affirm","Confirm Delete?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Lbe_Remind","LBE Reminder: Using XPosed Transaltion. If you have functional problems occur, please disable the XPosed Module, reproduce and contact LBE group. Thank you for your participation."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Phone_Type","Intercept mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Phone_BlockedSms","New %1$d intercepted SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Phone_BlockedCall","New intercepted calls from %1$d"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Phone_BlockedSmsAndCall","New intercept %1$d of %2$d SMS and calls from"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Block_Phone_Sms","%1$d %2$d SMS phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Optimize_Memory","Memory :%1$s /%2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Traffic_Mobile","%1$s /%2$s /%3$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Traffic_Unlimited","Package is not set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Optimize_OneClick","OneClick optimization"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback","Recommended Feedback"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_Saved","Your feedback has been saved"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_Title","Please provide your comments and suggestions:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_ErrorInput","Sorry, your feedback is too short, you can not submit"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_Send","Submit Feedback"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_Sending","Submitting feedback..."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_NetError","Network anomalies, please check your network connection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_Success","Your feedback has been submitted, thank you for your support"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_Error","Server is busy, please re-submit your feedback later"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_Url","http://bbs.lbesec.com"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_CreatingLogErrorFile","Report an error log is being generated..."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_CreateLogErrorFile","Generates an error log report"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_LogErrorFile_Success","Your error log has been submitted, thank you for your support"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_LogErrorFile_Failture","Error log submission failed, please try again later"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_LogErrorFile_Upload_TimeLimit","Commit interval is less than 10 minutes, please submit later"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_Cannotaccess_SDCard","Can not access the memory card, make sure the memory card is available"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_LogErrorFile_NoNetwork","Error log has been generated, the size of %1$s, storage location is %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_LogErrorFile_Send","Error log has been generated, the size of %1$s, Please choose whether or not upload file"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Feedback_LogErrorFile_NoSend","Error log has been generated, stored location is %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_About","About"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_About_PkgVersion","%1$s for Android version %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_About_urls","p> official website : <a href=http://www.lbesec.com> www.lbesec.com </a> </p> <p> Product microblogging : <a href = http://weibo.com/lbesec> LBE group </a> </p"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_About_phones","Tel : <a href=tel:01085997019> 010-85997019 </a>"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_About_mail","E-mail : <a href=mailto:lbe@lbesec.com> lbe@lbesec.com </a>"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_About_Copyright","Powered by Team LBE © 2011 All rights reserved Yong Yang On the wind"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Optimize","System Optimization"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Security","Security"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_AlertTab","Home Switch"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_AlertTab_Toast","Home has switched to the main screen %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Exit","Close Services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Exit_Warning","Close LBE Security Master security service, your phone will lose protection, whether to continue"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Item_Name_PhonePlugin","Communication Toolbox"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Item_Name_IpCall","IP dialing"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Item_Name_PhoneEnhance","Enhanced Communication"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Item_Name_PhoneEnhance_Item_Info","IP dial-up communications enhancements number lookup"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Item_Name_NumberSelect","Number Search"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Scan_Warn_NoOptimize","Acquisition system yet rated"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Scan_Warn_LowGrade","There are obvious risks"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Scan_Warn_LongTime","There may be hidden risks"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Scan_Warn_BadOptimized","Yet to be optimized"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Scan_Warn_Perfect","Perfect system"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_BackupTitle","Backup and restore"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Backup","Creating a backup"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Backup_Comment","In %1$s backup from %2$s%3$s Edition"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Backup_Comment2","%1$s%2$s version of the backup"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_BackupEmpty","No backup file, click Create Backup button to back up.This backup feature can backup your settings LBE the project.For example, management from Kai, rights management configuration settings."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_BackupOK","Backup success"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_BackupFail","Backup failed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_BackupHint_FileName","File Name"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_BackupHint_Comment","Remark"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_BackupProgress","Backing up the first part of %1$d, total %2$d part"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Restore","Reduction"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Restore_OK","Restart security master"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_RestoreConfirm","After restoring this backup, all current settings and data LBE Security Master will be replaced Are you sure?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_RestoreOK","Restore successful, the LBE will automatically restart"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_RestoreFail","Restore failed, please try again"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_RestoreProgress","Restoring part of %1$d, total %2$d part"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Delete","Delete"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_DeleteConfirm","Are you sure you want to delete the backup files"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Backup_NoSDCard","Please insert the SD card to use the backup and restore capabilities"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Security_Plugin","Security plug-in"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Security_Plugin_Desc","Privacy mobile security space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Onekey_Check","Check now"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Manual_Optimize","Manual"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Running_Slowly","Running slow"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Running_Normal","Running well"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Running_Fast","Running fast"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Task_Wait_To_Clear","Tasks to be cleaned"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Block_Already","Has blocked"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Remain_Amount","Remaining Data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Now_Loading","Loading..."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Phone_Accelerate","Accelerate"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Battery_Optimize","Battery"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Software_Manager","App Manager"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Disturb_Block","Call and SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Traffic_Monitor","Traffic"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Ad_Block","Ad block"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Virus_Kill","Antivirus"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Defense","Active Defense"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Notification_Manager","Notifications"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Personal_Privacy","Privacy Space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Anti_Burglary","Antitheft"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Communication_Tools","Comm Tools"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Backup_Restore","Backup Tool"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_First_Check_Tips","There is a risk of your phone, come examination under the bar"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Defense_Not_Running","Click on the left icon to open the active defense capabilities"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "score","%"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Autostart_Manager","Autostart Manager"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Authorize_Manager","Authorize Manager"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Guide_Reorder","Long press sort, freedom to choose your frequently used functions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Guide_Drag","Slide open the full functionality icon"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_HipsBubble_Defense_Incompatible","Active defense service does not start, click here for details shields"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_HipsBubble_Defense_Start","Click shield, open active defense services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_lock_AQ","Security issue"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_lock_AQ_A","Please enter the security questions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_lock_AQ_Q","Security issue"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_lock_AQ_CustomQ","Custom Security issues"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Error_PasswordEqual","Must be the same password twice"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Error_Empty_Password","Password can not be blank"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Error_Empty_Question","Security issues can not be empty"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Error_Empty_answer","The answer can not be empty"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Pattern_Zoom","Change the security lock level"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Pattern_Reset","Reset"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Pattern_First","Connecting at least four points set graphics"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Pattern_Second","Reconnect confirm Graphics"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Current_Active_Unlock","Current unlock method :%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Unlock_Fail_Passwd","Wrong password, unlock fail"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Unlock_Fail_Answer","Wrong answer, unlock fail"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Unlock_Fail_Pattern","Graphical errors, failed to unlock"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Unlock_QA","Q &amp; Unlock"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Unlock_Pattern","Graphics Unlocking"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Unlock_Password","Password to unlock"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_ForgetPassword","Forgot your password?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_USE_SAFEQA","Whether to use security issues into"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Select_Question","Please select the security issues"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Guide_SelectType","Please select unlock"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Guide_SelectTip","After selection, you can change the settings to switch"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Guide_Pattern_Message","Simple, convenient, easy to operate"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Guide_Pincode","Text password lock"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Guide_Pincode_Message","Tradition, common, easy to remember"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Error_Inputtimes","Wrong password retries:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Wait_Time","Wait again to unlock Time:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Crack_Setting","Set against brute force"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Forbidden_Input","%1$s second input error ,%2$s seconds inhibit input"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Fail_Residue_Time","Unlock failed, please wait %1$s seconds after unlocking"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Activate_Keyguard","Click on the icon, you can modify and activate the corresponding unlock"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Type_Pattern","Graphic lock"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Backup","Security and privacy space master account and password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Type_Pincode","Lock"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Type_Facerec","Facial Recognition"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Type_QA","Security issue"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Setting_QA","Set the security issues that prevent password is forgotten"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Crack_Setting_Default","Five times the input error, disable input within 50 seconds"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Keyguard_Question_Defualt","My best friend"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic","Traffic Monitor"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Setting","Traffic Monitor settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Statistics","Traffic Statistics"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Ranks","Traffic Rank"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Mobile","Mobile network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Mobile_Set_DataPlan","Click Settings Package"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Mobile_Rank","Top mobile network traffic"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Mobile_Rank_Empty","No traffic ranking data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Mobile_Permission","Mobile network permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Mobile_Disable","Turn off the mobile network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_WIFI","WIFI network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_WIFI_Rank","WIFI network traffic ranking"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_WIFI_Permission","WIFI network permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_DataPlan_Set","Set Package"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Calibrate","Calibrate"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Calibration_Short","Since the last calibration time is less than 3 minutes, please try again later"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Calibration_NoNetwork","Automatic Traffic calibration requires a network connection before use"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Calibration_Failed_DataPlanNotSet","You need to set the Dataplan before automatic calibration"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Calibration_Failed","Automatic Traffic calibration failed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Calibration_Succeed","Automatic Traffic calibration success"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Calibration_Start","Contacting the cloud server parses text, please wait"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Please_Set_Operator_Info_First","Please set the operator information"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Calibration_Promo_Content","Recommend that you use the automatic calibration function Automatic Traffic correction function sends queries to the operator via SMS to automatically update Traffic Monitor data, more accurate and convenient"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_SetOperator_ButtonOk","Immediately set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_SetOperator_ButtonCancal","Temporarily set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Alarm","You have used more than 90% this months Dataplan, in order to avoid traffic overruns, we recommend that you use caution!"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Overproof_Alarm","You have used more than 100 percent of your Dataplan this month, we recommend that you immediately turn off networking!"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Overproof_Dialog_Positive","Immediately off the net"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Overproof_Dialog_Negative","Continue to use the"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Overproof_Dialog_Checkbox","This month is no longer remind"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Discount","Traffic at half time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Discount_Start","Start Time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Discount_End","End Time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_DataPlan_NotSet","You have not set your Dataplan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_DataPlan_Unlimited","Not set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Operator_Location","Your address"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Operator_Province","Your province"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Operator_City","Your city"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Operator_Operator","Your cell phone carrier"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Operator_Brand","Your package brand"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Projection_Exceed","Traffic this month is expected to exceed %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Projection_OK","Adequate Dataplan, you can be assured"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Usage","Used this month:%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Remain","Rest of the month:%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Float_Progress","Month"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Rank_NetType","Network Type"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Rank_TimeType","Time Type"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Permission_NoData","Data without permission"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Permission_Loading","Loading"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Summary_Unknow","Unknown"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Summary_ConnectionSpeed","Real-time connection speed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Summary_IPAddress","IP addresses"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Summary_CurrentConnection","Current connection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Summary_Operator","Operators"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Summary_Hotspot","Hotspot name"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Summary_Security","Security"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Summary_TheoryNetworkSpeed","Theoretical network speed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Retrieving","Retrieving"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_NotConnected","Not connected"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Usage_Hint","This month"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Plan_Hint","Dataplan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Today_Hint","Traffic Today"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Monitor_Dataplan_Amount","Total"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Net_App","Networking Software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Rank_Month","Top this month"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Rank_Today","Today's Top"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_rank_Realtime","Real-time Top"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Net_Firewall","Network firewall"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Carrier_CMCC","China Mobile"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Carrier_UNICOM","China Unicom"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Carrier_TELECOM","China Telecom"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Carrier_CMCC_Brand_Global","GoTone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Carrier_CMCC_Brand_MZone","M-Zone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Carrier_CMCC_Brand_ShenZhou","Easyown"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Carrier_UNICOM_Brand_2G","Unicom 2G"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Carrier_UNICOM_Brand_3G","Unicom Wo 3G"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Carrier_TELECOM_Brand","China Telecom"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Title","Notification bar"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Title_Hint","Easy to advertising, clean notification bar"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Title_sub1","Notification bar message"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Title_sub2","Program Permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Title_sub3","Interception record"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Notification_Permission","Notification bar Permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Notification_News","Notification bar message"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Notification_News_Empty","Your phone does not notice"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_App_Hint","Notification from :%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Default_App","Unknown program"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Block_Ads","Block advertising"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Clear_Nft","Clear notice"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Showing","Showing (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_More","More Notification (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Blocked_Title","Interception record"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_No_Blocked","No interception record"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Clear_Blocked_Record","Delete records"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Uninstall_App","Uninstalling the software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Blocked_List_Title","Recently intercept (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_App_List_Empty","Not Notifications detected"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_App_Title","Program Permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Reject","Reject"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Accept","Allow"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Reject_Title","Reject (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Accept_Title","Allow (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Custom","Custom"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_App_List_Title","All Programs (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Advanced_Title","%1$s: Notification Details"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Nft_Mgr_Advanced_Empty","Records without notice"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Action_Get","Get security patches"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Action_Install","Application of security patches"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Action_Failure","Return"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Action_Reboot","Restart the phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Installed_AutoReboot","Security patch installation is successful, the phone will automatically restart in %1$d seconds"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Installed_Tips","Security patches installed successfully, immediately restart the phone to turn on protection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Check_Network","Please check your network connection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Check_Incompatible","Sorry, LBE group temporarily unable to provide for your phone system patches, open real-time virus scanning to protect your phone safe"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Check_Fixed","Security patches have been applied"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Check_Fixed_Dest","You have successfully applying security patches, open the active defense to protect your phone safe"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Check_Immune","Congratulations and found no security vulnerabilities"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Download_Success","Successfully donwloaded security patches, please click Apply security patches"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Download_Failure","Failed to get the security patches for your phone, please try again later."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Download_Cancelled","Cancelled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Title","Your system is vulnerable"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Description","Master detects that your system is vulnerable, the system could allow hackers to any application can be changed Trojans, full control of your phone in case you have not noticed, the theft of privacy and cause fees. We recommend that you obtain repair LBE Security Master plan to provide you protect your safety. "); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Description_RootFree","LBE detected that your system is vulnerable, the system could allow hackers to any application can be changed, install Trojans, take full control of your phone, identitytheft and cause charges Before using Free ROOT, please fix this vulnerability. "); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Query_Upload_Info","Contacting the cloud for repair program"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Query_Download_Info","Fetching repair program"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Query_Upload_APK","Fix the required data is being uploaded"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Query_Download_ODEX","Downloading Repair Tool"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Continue","Continue"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Cancel_Warn","Being cloud acquisition system patches, you are sure to cancel it?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Need_Update_Title","System patches need to be upgraded"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Need_Update_Desc","System patches need to be upgraded, can be upgraded with the latest active defense, obtain the latest system patches."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Apply_Success","Congratulations on your successful application of security patches!"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Enable_Hips_Tips","Open the active defense?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Patch_Need_More_Request","Repair program needs to be updated"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone","Block call and SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Backup","Block calls and messages set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Setting","Block calls and messages set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Running","Block calls and messages service protection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Stopped","Block calls and messages service has shut down"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Carrier_CM","Mobile"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Carrier_CU","Unicom"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Carrier_CT","Telecommunications"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Blacklist","Blacklist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Whitelist","WhiteList"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Call_Intercept","Intercept telephone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Msg_Intercept","Intercept SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MsgAndCall_Intercept","Intercept calls and SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MsgAdnCall_pass","Release calls and text messages"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Rule_Yes","Receive"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Rule_No","Block"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Rule_Smart","Intelligence block"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Rule_Ignore","Ignore"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_Keywords","Add keywords"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_Keywords_Hint","Keyword"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_Keywords_Explain","Keywords separated by commas or spaces available"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Input_Number","Please enter the number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Edit_Keywords","Edit Keywords"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Have_This_Keyword","Keyword %1$s already exists"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Blacklist_Add","Add number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_CallLogTitle","Spam phone calls"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MsgLogTitle","SMS Spam"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_ReportMessageTitle","Report Spam SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_ReportSelected","Report selected (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Select_Message_Want_Report","Please select the message you want to report"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Please_Selected_Message_First","Please select the message you want to report"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Msg_BlockCount","Intercept SMS %1$d of"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_Contact","Add from Contacts"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_CallLog","Add from Call History"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_SMS","Add records from a text message"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_Manual","Manually add"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_Manual_Name","Name"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_Manual_Number","Phone number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_Manual_Wildcard","In numbers, you can use * to replace one or more digits For example : 138 * matches any number of  138"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Call_Intercept_ShortRing","Bell %1$s seconds"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Operate","Operating"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Edit","Edit"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Unnamed","Unnamed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_UnknownNumber","Unknown Number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_EmptyNumber","Numbers can not be empty"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Select_Block_Type","Please select the type of interception"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_Norm","Smart block mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_ContactAndWhite","Receive only contacts and whitelist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_Black","Block only blacklist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_White","Receive only whitelist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_ALlReject","Block all"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_AllAllow","Accept all"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_UserDefine","Custom mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_Contact","Only receive contacts"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_UserDefine_Edit","Set custom mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_Norm_Content","Intercept blacklist, whitelist release, contacts, and recently had contact number, keyword blocking, smart filter message content"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_Black_Content","Intercept blacklist numbers only receive text messages and other phone numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_White_Content","Receive only the white list numbers, intercept text messages and other phone numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_ALlReject_Content","Intercept all of the information and phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_AllAllow_Content","Receive all the information and phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_Contact_Content","Only receive contacts, text messages and phone intercept other numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_ContactAndWhite_Content","Receive only contacts and white list, blocking other text messages and phone numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Type_UserDefine_Content","User-defined whitelist, blacklist, contacts, and other smart way to intercept intercept intercept SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Blackwhitelist","Black and white lists"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Clear","Empty"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Select_City","Select Area"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Select_All_Discrict","All regions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Select_Marker","Selectable marker category"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Select_Marker_Empty","Yet to add tags categories"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Multimedia_Message","Inbox to be restored to the system only after check MMS content"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Use_IpCall","Using IP dialing"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Auto_Ip","Automatic IP dialing"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Select_IPNumber","Select the IP number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Number_UserDefine","Custom"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Write_Manual","Enter custom IP numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Ip_Calling_Setting","IP dial settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Ip_Sim_Calling_Setting","%s IP dial settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_NoHave_Calling_Permission","LBE Security Master can not dial, IP function is disabled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_NoIP_Area","Do not use IP dialing area"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_NoUse_AnyProvince","No"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_NoIP_Number","Do not use IP dialing numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Manual_NoUseIP","Do not use IP dialing numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Select_AddType","Select Add mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Model_Change","Intercept mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Keywords","Keyword"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Keywords_Match","%1$d (%2$s)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Keywords_Set","Keyword Settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_Black","Add blacklist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_White","Add white list"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_KeyWords","Add keywords"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_Selected","Add Selected (%d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Affirm_Delete","Confirm to delete the selected number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Affirm_Clear","Confirm Clear all selections do?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_BlockType","Intercept mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_BlockType_UserDifine_Set","Custom mode settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_NoUseIP","Do not use IP dialing numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_BlockLog_Title","(%1$s)%2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Adding","Adding, please wait"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Clear_ALL_Log_Message","Sure you want to clear all the interception record it"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Clear_ALL_IpNoUse","Sure you want to clear all NA IP dialing number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Report_Success","Report spam messages successfully, thank you for your support"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Import_Log","Whether to import these numbers text messages and phone records ? Import was successful system of records will be deleted"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MISSED__Content","Missed Length :%s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Coming_Content","Call Duration :%s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Going_Content","Outgoing Length :%s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Empty_BlackList","Add blacklist numbers, intercept text messages and telephone harassment, support from contacts, text messages and other ways to add records"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Empty_WhiteList","Add a trusted number, giving priority to maintain the smooth flow of calls and text messages"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Empyt_BlockCallLog","Here is intercepted phone displays"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Empyt_BlockMsgLog","Intercepted messages displayed here"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Empty_Report","No stranger to SMS inbox"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Empty_SignNumber_Add","No To mark number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Empty_SignNumber","This category is not marked unfamiliar Caller ID"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Empty_Contact","No Contact"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Empty_CallLog","No call records"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Empty_SmsLog","No SMS record"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Empty_KeyWords","Add keywords can intercept text messages containing the keyword strange, completely prevent spam messages harassment"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Empty_NouseIp","No numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Adding_Log","Adding intercept log"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Loading","Processing"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Data_Upload_Title","Cloud security services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Data_Upload_Declare","LBE Security Master invites you to use cloud security services. Cloud-enabled security service, LBE can be more accurate intercept harassment, you can also feel free to report harassment. Cloud security services will not only waste your WIFI network data traffic . You can use it . Will you use ?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MissCall_Title","There is a missed call alert"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MissMsg_Title","There is an unread SMS alert"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MissCallAlert_Type","Type of alert"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MissCallAlert_Time","Tips interval"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MissCall_SelectRing","To select a ringtone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_NightSaving_BeginTime","Start time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_NightSaving_EndTime","End Time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Alert_Add_White","Whether to restore SMS and call records to the system"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Common_Number","Frequently called numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Fixed_Line","Fixed telephone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_UnKnow_Alert","Unread event reminders"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Select_Location","Attribution to inquiries"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_GoingCall_Alert","Access to electric shock"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_SignNumber_Title1","Beep"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_SignNumber_Title2","Spam phone calls"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_SignNumber_Title3","Merchandising"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_SignNumber_Title4","Real Estate Agents"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_SignNumber_Title5","Express Delivery"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_SignNumber_Title6","Blacklist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Edit_MarkerType","Edit Categories"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_MarkerType","Add categories"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Del_MarkerType","Clear Categories"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MarkerType_Name","Category Name"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MarkerType_Name_Empty","Please enter the category name"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MarkerType_Name_Exist","Classification already exists"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Custom_Blacklist","Blacklist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Custom_Whitelist","WhiteList"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Custom_Contact","Contact Phone and SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Custom_Conversation","Communication over the number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Custom_KeyWord","Keyword"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Custom_Smart","Stranger SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MIUI_Helper","SMS interception help ( for MIUI users )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MIUI_Help_Title","MIUI user SMS interception setup instructions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Alert_Title","Security master"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Alert_Vibrate","When you make a call, the other party will be switched on security master vibrating alert, this feature is available in the toolbox of communication enhanced communication setting, whether you use the vibration function turned on"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Alert_AddBlack_Content","Whether immediately strange number :%s added to the blacklist, refusing again harassed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_SupperSetting","Advanced Settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Alert_AddTo_Black","Mark strange numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Alert_AddTo_Black_Summary","Strange calls less than 15 seconds of talk time prompts"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_BlockLog_Save_Time","Save time interception record"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Auto_AddTo_White","Smart whitelist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Sgin_StrangeNumber","Mark strange numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_BlockOneRing","Intercept an incoming call sound"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_BlockVOIP","Telephone intercept unknown"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_BlockSetting","Intercept settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Sgin_StrangeNumber_Delete","Delete"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Sgin_AddStrangeNumber","Mark recently strange numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Coming_Call","%s call"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Missed_Call","Missed %s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Sgin_Number","Mark"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Add_Success","Successfully added"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Update_Marker_Title","Forwarding number %s to"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Update_Marker_NoCategory","No classification numbers can be transferred"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Now_State","Current mode :%s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Mark_TemporarilyNotMark","Temporarily mark"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Mark_AddMark_Content","Whether the number tag?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Mark_StrangeNumber","Mark strange numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Mark_StrangeNumber_Manage","Strange number label management"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Mark_StrangeNumber_Manage_Summary","Add and manage categories tag"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Reason_Smart","Intelligence block"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Reason_Location","Place blacklist %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Reason_Number","Blacklist Number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Reason_Mark","Number mark %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Reason_Keyword","Keyword blocking %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Reason_Pattern","Block all"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Reason_Report","Report SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Black_Import","Importing blacklist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Geolocation_Carrier","%1$s%2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Report_SpamSms","Report Spam SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Report_SpamSms_Message","Confirm Report this text"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Clear_MsgLog","Empty SMS record"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Clear_CallLog","Empty the phone records"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Select_Cate","Please select a category"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Marker_Message","Mark strange number %1$s is:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_MsgBlock_Fail_Hint","Intercept SMS unsuccessful"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Block_Reason","Intercept reasons:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Mark_Hint","Mark unfamiliar number is:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Mark_New_Cate","New Category:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Mark_Add_New_Cate_Hint","Click Add New Category"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_AddBlack_OrNot","Whether to join the blacklist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Tools","Communication tools"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_IP_Dial","IP dialing"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Local","Attribution"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Unread_Event","Unread event reminders"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Connect_Vibrate","Connected to vibration"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Mark_title","Number mark"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_UnKnow_Number","Unknown Number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Mark_CurrentNotMark","Temporarily mark"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Mark_AddNewContact","Add Contact"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_mark_AddMarkType","Add"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_mark_strange_message","You have just received a strange number %1$s call, ask whether you are causing harassment"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_no_thanks","No, thank you"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_mark_abort","I want to block"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_mark_Mark_continue","Mark number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_mark_thanks_for_mark","Thanks for your mark"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Location_Window_Marker","%1$d people labeled as %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Location_self_Marker","You have marked as %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Miui_setting_title","MIUI user settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Miui_setting_message","Your phone is MIUI system, you can be set up and use LBE Block calls and messages services."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Miui_setting_set","To set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Miui_setting_cancel","Cancel"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_SIM1_setting","SIM1 settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_SIM2_setting","SIM2 settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Database_Marker_Name_UserDefine","Custom"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Black_restore_sms_tip","Recovery intercepted messages, calls to the system"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_connected_vibrate_abort","Section 4.1 above system to disable this feature"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_Upgrade_Title","Upgrade %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_Upgrade_Succeed","%1$s has been successfully upgraded to the latest version"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_Upgrade_Failed","%1$s failed upgrade"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_Delete_Title","Uninstalling %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_Delete_Message","You are trying to uninstall %1$s. After unloading ,%1$s will be removed from the system, whether to continue"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AntiTheft","Antitheft"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AntiTheft_Running","Anti-theft protection services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AntiTheft_Stopped","Security service is not open"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AntiTheft_Name","LBE security service"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AntiTheft_Welcome","Welcome LBE security service"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AntiTheft_Introduction","LBE LBE Security Master security services launched an independent anti-theft module for your phone with the best anti-theft protection . LBE security service to provide you with the following functions: mobile phone positioning, data destruction, data backup, anti-theft alarm, virtual warnings The first time you use LBE security service, please download and install LBE security service module"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AntiTheft_RootInstall","ROOT installation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AntiTheft_RootIntroduction","ROOT installation mode LBE security service can be installed as a system component, can not be easily uninstalled. Even if your phone is to restore the factory settings, LBE security service can still work properly, to protect your phone safe"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AntiTheft_Install","Download and install LBE security service"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AntiTheft_Installing","Installing"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AntiTheft_Install_Fail","LBE security service installation failed, please try again later"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AntiTheft_Install_RootFail","LBE security service ROOT installation fails, it may be because your machine does not support ROOT installation mode, turn off the option to retry installing ROOT"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_PrivacySpace_Name","Privacy Space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AppLock_Runing","Privacy protection space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AppLock_NotInstall","Privacy Space is not installed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AppLock_Install","Whether to download and install privacy space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_AppLock_Install_Hint","Privacy space can protect your phone videos, pictures, documents, etc., for the first time, please download and install"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_Install_Toast_Installed","You have installed the %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Plugin_Install_Toast_Download","Downloading %1$s, will be automatically installed after downloading"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Cat_Service","Security service settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_HIPS_Service","Active defense services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Phone_Service","Harassment intercept service"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Saving_Service","Power Service"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Traffic_Service","Traffic Monitor services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Cat_System","System Settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_AnonymousReport","Join cloud killing plan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_ErrorReport","Send Software Error Reporting"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Notification","Notification bar icon"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_AutoStart","Auto start"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Cat_Shortcut","Desktop shortcut"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_CleanShortcut","Add shortcut to the desktop Oneclick clean-up"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_CleanShortcut_Summary","Oneclick memory clear, convenient"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_LbeShortcut","Add LBE quick switch"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_LbeShortcut_Summary","Phone hardware configuration, convenient"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Cat_Password","LBE Security Master password protection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Clear_Task","Memory scrubbing"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Clear_Task_WhiteList","Memory scrubbing whitelist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Battery_Saver","Battery Optimize-related"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "pref_Password_Protection_Settings","Password protection settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Professional","Expert Mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Professional_Deep","Deep cleaning mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Professional_DeepWarning","On this mode, the operation involving garbage, are completely removed, use with caution."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Password","Password Protection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Password_Config","Set Password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Password_Pattern","Setting Graphic password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Password_QA","Set security issues"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Password_Prompt","Please enter a password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Password_Error","Wrong password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Password_Mismatch","Passwords do not match, please re-enter"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Password_Set","Password has been set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Password_New","Password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Main_Password_Confirm","Confirm Password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_AV_AutoDownload","Check automatically download upgrades to new versions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_AV_Realscan","Real-time monitoring the newly installed software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_AV_AutoUpdate","Automatic update check period"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_HIPS_Forge_SendReport","Always report message sent successfully"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_HIPS_Record_Event","Security incidents prompted in the notification bar"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_HIPS_Record_Telephony","Outgoing text messages and phone logs"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_HIPS_Forge_IMEI","Access to access the IMEI is denied."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_HIPS_Forge_Location","Access to your exacr Location is denied."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_Block_Method","How to intercept calls"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_Block_Occur_Error","Intercept error description"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_Block_Occur_Error_Desc","When all incoming calls when you can not refer to this method"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_Cat_Night","Night DND settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_NightMode","Night Disturb mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_NightMode_BeginTime","Start time setting"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_NightMode_EndTime","End time settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_NightMode_BeginTime_Dlg","Start time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_User_Defined_Rule","Set custom mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_CallLocation","No attribution Tips"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_CallLocation_Fixed","Locking attribution prompt box location"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_CallLocation_Background","Attribution prompt box style"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_CallMsg_Notification","Intercepted prompt notification bar"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_Data_Upload_Summary","LBE Security Master to help improve accuracy rate of interception"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_UseSuperEndCall","Enabling system-level telephone intercept"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_SuperEndCallDialogBody","System-level telephone intercept feature requires you to enable proactive defense before use. Phone intercept system level has the highest priority, which can effectively avoid the call reject beep when such issues . However, the current system-level telephone intercept feature only supports some models, if your phone to enable this feature correctly, please turn off this feature"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Phone_DelayUnknownCall","Strange calls ringing delay 3 seconds"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_ManageSetting","Power management settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_NotificationCategory","Other"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_AutoSave","Open automatically when battery is low power saving mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_Cat_Config","Energy saving mode setting"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_Screen","Screen settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_Screen_Summary","Power-saving mode, screen brightness and off-screen time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_BT","Turn off Bluetooth"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_BT_SummaryOn","Turn off Bluetooth power saving mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_BT_SummaryOff","Power saving mode does not change the Bluetooth settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_WIFI","Turn off Wi-Fi"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_WIFI_SummaryOn","Turn off Wi-Fi power saving mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_WIFI_SummaryOff","Power saving mode does not change the wireless network settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_Data","Close 2G/3G data connection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_Data_SummaryOn","Turn off the power saving mode 2G/3G data connection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_Data_SummaryOff","Does not change the power saving mode 2G/3G data connection settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_AutoSync","Turn off automatic synchronization"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_AutoSync_SummaryOn","Power saving mode disables all software update data in the background"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_AutoSync_SummaryOff","Power Save mode allows all software update data in the background"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_Vibration","Close vibration feedback"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_Vibration_SummaryOn","Turn off the power saving mode vibration feedback"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Saving_Vibration_SummaryOff","Power saving mode setting does not change the vibration feedback"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_Cat_Config","Energy saving mode setting night"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_BeginTime","Night time power saving mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_EndTime","Turn off power saving mode at night time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_Screen_Summary","Night saving mode screen brightness and off-screen time"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_Airplane","Turn flight mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_Airplane_SummaryOn","Night flight mode on power saving mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_Airplane_SummaryOff","Night saving mode setting does not change the flight"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_BT_SummaryOn","Turn off Bluetooth power saving mode at night"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_BT_SummaryOff","Night saving mode does not change the Bluetooth settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_WIFI_SummaryOn","Night off the wireless network power saving mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_WIFI_SummaryOff","Night saving mode does not change the wireless network settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_Data_SummaryOn","Night saving mode 2G/3G data connection closed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_Data_SummaryOff","Night saving mode does not change the 2G/3G data connection settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_AutoSync_SummaryOn","Night saving mode disables all software update data in the background"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_AutoSync_SummaryOff","Night- saving mode allows all software update data in the background"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_Vibration_SummaryOn","Turn off the power saving mode at night vibration feedback"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_NightSaving_Vibration_SummaryOff","Night saving mode setting does not change the vibration feedback"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_BillingDay","Settlement date"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_BillingDay_Summary","%s monthly billing start date"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Alarm","Traffic Alert"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Alarm_Summary","Alarm if Data exceeds 90% of your Dataplan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Auto_Close","Automatically disconnected"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Auto_Close_Summary","Stop Data automatically if exceeding your Dataplan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Adjust_Hint","Enter the actual month with traffic, you can query via SMS or telephone traffic usage"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Adjust_AutoQuery","Automatic"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Adjust_SMSQuery","SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Adjust_SMSQuery_Number","SMS numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Adjust_SMSQuery_Content","Message content"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Adjust_PhoneQuery","Call"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Adjust_PhoneQuery_Number","Phone number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Adjust_Query","Inquiry"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_FloatWindow","Floating window shows traffic"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_FloatWindow_Style","Floating window display style"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_FloatWindow_Fixed","Locked Traffic floating window position"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_FloatWindow_On_Statusbar","Floating window can be moved to the status bar"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_FloatWindow_On_Statusbar_Summary","If the affected parts of the software brightness adjustment function, choose Close"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_FloatWindow_NoFocus","After locking the floating window can click traffic"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_FloatWindow_Refresh","Traffic floating window refresh rate"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_FloatWindow_Refresh_Summary","Higher refresh frequency can improve accuracy, but will consume more power"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_FloatWindow_AutoDim","Automatically hide the floating Traffic window"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_FloatWindow_AutoDim_Summary","After a period without traffic, automatically hide the floating window"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_DataPlan","Set Dataplan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Adjust","This month has been used to adjust Data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Clean","Clear Traffic Data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Clean_Dialog","All traffic statistics will be cleared, whether to continue"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Auto_Update","Automatic Traffic calibration"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Operator_Setting","Operator information set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Shortcut_Dsc_Show_White","Still cleaning up the software on the white list"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Shortcut_Settings","Desktop Shortcut"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Shortcut_Settings_Desc","Set Desktop task manager, shortcuts, and real-time traffic window"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Clear_Ingore_Desc","The software on this list will not be cleaned up"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_OnTime_Update_Setting","Automatic Traffic calibration settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Calibrate_OnTime_Auto","Regular automatic calibration"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Calibrate_Sms_Setting","Traffic SMS settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Calibrate_SMS_Dialog_Title","Traffic calibration settings SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Calibrate_SIM_Operator","SIM card"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Operator_Setting_SIM","Set up SIM card information"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Operator_Setting_SIM_Message","Depending on your SIM card requires attribution information, check the exact operator SMS commands ."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Operator_SIM_Province","SIM card region"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Operator_SIM_City","SIM card city"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Operator_SIM_Operator","Select operators"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Pref_Traffic_Operator_SIM_Brand","Select Brand"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Root_Shuame","OneClick obtain ROOT permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Root_Shuame_1","Installation Wizard software that helps you to get ROOT permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Root_LBERoot","LBE Oneclick ROOT, help you easily obtain the phone ROOT permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Root_Shuame_2","Please use your computer to access:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Root_Shuame_3","www.lbesec.com/root"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Root_Shuame_App","Brush Wizard"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS","Active Defense"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Backup","Software Configuration Permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_AppConfig","Software Configuration"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Setting","Proactive Defense settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_State_Loading","Active defense services being loaded"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_State_Running","Proactive protection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_State_Stopped","Active defense is not open"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_State_Init","Active defense is initializing"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_Empty","No software records"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_Type","Please select the type of software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_All","All Software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_Trust","Trust"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_Count","%1$d apps"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_Trust_SummaryOn","Allow all operations"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_Trust_SummaryOff","Monitoring by LBE Security Master"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_Perm_Count","%1$d Key Permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_Monitored","Monitored Software (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_Trusted","Trust Software (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_System_UntrustFirst","%1$s is the phone comes with software to monitor it can cause problems with your phone . Whether to continue ?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_Config","Configuration software Permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_Config_NoRoot","You have not turned on active defense capabilities, so you will not be able to modify the software permission. Click here to open the active defense capabilities"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_New","Configure permissions for %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_NewApp","Click to view %1$s permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_NewApps","%1$d new apks to configure"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_NewAppsWithAdware","%1$d/%2$d apk to configure/with ads"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_New_Installed","%1$s has been installed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_New_Configure","Click the Permissions configuration software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_New_Configure_NoVirus","Not a threat is detected, click the Permissions configuration software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_App_Batch","Bulk Action"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Log","Defense Logs"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Log_NoLog","No active defense Logs"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Log_Detail_Title","Log details"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Log_Detail_Content","%1$s %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Log_Detail_None","No details"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Log_Earlier","A week ago (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Log_Week","This week (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Log_Today","Today (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Log_Clean","Clear active defense Logs"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Action_Accept_Count","Allow %1$d times"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Action_Reject_Count","Intercept %1$d times"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_SecurityPrompt_Caption","Security Warning"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_SecurityPrompt_Title","%1$s is trying to %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_SecurityPrompt_Remember","Remember my choice"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_SecurityPrompt_Accept","Allow (%d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_SecurityPrompt_Reject","Reject (%d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm","Permission manager"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Trust_NoConfig","Trusted software, you can configure permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Notif","Active defense failed to load"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Notif_Detail","Active defense failed to load, click here for details"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Notif_LoadTimeOut","LBE Security Master can not get ROOT access, your phone may not have ROOT privileges, or you do not grant Root to LBE Security Master."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Notif_LoadTimeOut_ROOT","Please help me ROOT my phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Notif_RebootRequired_Title","Please restart your phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Notif_RebootRequired","Active defense service will start working after restart the phone . If the active defense still fails to load, you are prompted to restart your phone, long press the power button to manually restart the phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Notif_UnknownReason","Active defense service failed to load, try restarting your phone. If the active defense still fails to load, you are prompted to restart your phone, long press the power button to manually restart the phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Conflict_MIUI_Title","Millet phone built LBE active defense services Please refer to the following steps to turn off"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Conflict_MIUI_Step1","Click on \"Software Permission manager\""); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Conflict_MIUI_Step2_V4","Close the \"Software Permission manager\""); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Conflict_MIUI_Step2_V5","Close the \"authority to monitor\""); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Conflict_LBE_Title","Your phone has built LBE active defense services Please refer to the following steps to turn off"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Conflict_LBE_Step1","Click the \"Settings\""); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Conflict_LBE_Step2","Close \"active defense service\""); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Conflict_Next","Next"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Conflict_Config","Start setting"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Conflict_Verify","Will you turn off the built in accordance with the process of active defense services?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Conflict_Verify_Positive","Closed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Conflict_Verify_Negative","Not closed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Reboot","Restart the phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Reboot_Failure","If the phone does not restart, restart your phone your own"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Defending","Active defense is protecting this device"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_NOT_Defending","Active defense does not start"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Root_Mode","ROOT Activation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Root_Mode_Desc","ROOT authorization to start the active defense services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Root_Free_Mode","OneClick Root"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Root_Free_Mode_Desc","ROOT to start active defense services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_MIUI_Mode","MIUI Activation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_MIUI_Mode_Desc","ROOT to start without active defense services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Enableing","Active defense services starting"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Disableing","Shutting down active defense services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Permission_Desc","Control software Permission, privacy"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_AutoBoot_Desc","Control program from boot, mobile phones faster and more power-saving"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_ADBlock_Desc","Block malicious ads"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_NotifyMgr_Desc","Block ADs and annoying Notificatons."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Sys_Reduce_Desc","Powerful Uninstall phone pre-installed software to make your System slimmer"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Net_Firewall_Desc","Control networking authority, to prevent unintended communication"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_HipsLog_Desc","Permission behavior control applications"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Not_Enable_Warn","Use the full functionality, you need to open the active defense"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Guide_HIPSEnable","Click the button to open the active defense services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_ADB_MGR","Software installed automatically blacklist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_ADB_DESC","Help you prevent <font color=#17A4F5> silent install software </font>"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_ADB_Install_Title","Install the software via USB"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_ADB_Install_Content","<font color=#17A4F5>%1$s</font> is trying to automatically install <font color=#17A4F5>%2$s</font> to your phone. If this is your own behavior, it is recommended to allow this, or you can choose to reject."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Detected_PC_Install_APK_To_Phone","Detected APK Installation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_USB_Install_Remind","Automatically installed Software alert"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_USB_Install_Detail_Both","%1$d already installed, refused to install %2$d, click here for details"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_USB_Install_Detail_Install","%1$d already installed, click here for details"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_USB_Install_Detail_Rejected","Refuse to install %1$d, click here for details"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Manual_Start_Hips_Hint","Please manually open the active defense"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_phones","Privacy contacts"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_phones_backup","Privacy contacts, text messages and call records"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_phones_AddNewAccount","Add privacy space account"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_phones_AddFakeAccount","Add fake account"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_phones_FakeAccount_Invalid","False account password can not be repeated with the master account password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_password_hint","Welcome to Privacy contact. When you first use Privacy contact function, please set the Privacy contact password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_password_reset_hint","You are changing the privacy of communication password, enter your new password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_password_setup","Set Privacy contact password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_password_login","Enter the privacy password Communications"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_sms","Privacy SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "privat_sms_intro","Your private communications space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_phone","Privacy Phone"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "privates_contact","Secret Contacts"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_contact","Privacy Contact"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "add_private_contact","Add Privacy Contact"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_contact_empty","Please add privacy contact"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_phone_normal","Normal answer"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_phone_endcall","Hang up immediately"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_message","Privacy SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_manual_private_contact","Manually add privacy contact"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_have_this","This number already exists"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_write_message","Write text messages"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_send_message_body","Send SMS content"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_send","Send"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_send_message_title","Send SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_message_have_send","Message has been sent"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_message_no_empty","Information can not be empty"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_number_no_empty","Numbers can not be empty"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_adding_privatelog","Communication record is being added privacy"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_dialog_title","Prompt"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_delete_privatecalllog","Do you want to delete phone records privacy"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_delete_privatemmslog","Privacy messages you want to delete records"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_log_addalert","Whether to import these numbers text messages and phone records ? Import was successful system of records will be deleted"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_log_add_fail","SMS and call records failed to import"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_have_no_calllog","You have no privacy phones"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_have_no_msglog","You have no privacy SMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_delete","Delete"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_delete_calllog","Are you sure you want to delete this call log"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_delete_message","Are you sure you delete the entire message thread"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_delete_msg","Are you sure you delete this message"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_oneself_name","I"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_recover_sms_success","Successfully restored to the system inbox"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_recover_success","Successfully restored to the system"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_recover_sms_false","Restored to the system fails"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_recovering_sms","Information is being restored to the system"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_input_msgcontent","Click to enter information content"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_reply","Reply"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_cannot_sendmsg","Your phone is now a SIM card is not inserted or is flight mode, we can not send text messages"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_adding","Importing communication record"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_alert_recover_sms","Communication will be restored to the system data privacy"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_alert_delete_private_contact","Whether to delete the privacy contact"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_show_password","Show password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_input_password","Please enter your login password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_input_password_again","Please enter the password again"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_input_new_password","Please enter a new password ( length can not be more than 10 characters )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_input_new_password_again","Please re- enter the new password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_password_no_same","The two passwords do not match"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_password_length_alert","Password length can not exceed 10 characters"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_password_cannot_empty","Password can not be blank"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_register_success","Registration is successful, remember passwords"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_password_false","Password input error"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_update_password","Modify the Privacy contact password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_open_fake_ui_summary","Prevent others ask to see the privacy space requirements, set up in advance so that privacy is more confidential false interface"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_setfalseui_password","Set false interface password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_newmessage_notification_type","New message notification"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_newmessage_notification","Message notification"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_message_ring","Privacy SMS ringtones"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_message_icon","Privacy SMS notification icon"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_call_icon","Privacy incoming call notification icon"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_notification_text","Prompt text notification bar"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_newmessage_vibrate","News vibrating alert"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_click_change","Click Change"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_password_set","Password Settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_set_fake_password","Set false Space password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_set_new_fake_password","Set a new password for false space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_set_new_fake_password_again","Repeat the new password false space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_set_success","Successfully set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_show_icon","Explicit Icon"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_hinting_icon","Implicit icon"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_newmsg_alert","News alert"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_password_cannot_use","This password is unavailable"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_choose_contact","Select the Privacy Contact"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_clear_calllog","Empty Record"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_add_contact_hint","You do not have privacy contacts, please add privacy contact"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_register","Registration"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_login","Log in"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_keyguard_init_tips","Connected in any order with at least four points on the screen"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_keyguard_input_less","Please re-enter less than four"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_keyguard_unlock_fail","%1$d times to unlock fails, %2$d seconds and try again"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_keyguard_draw_again","Two patterns are inconsistent, draw again"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_keyguard_setting_success","Unlock pattern set successfully"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_keyguard_setting_toosimple","Unlock pattern too simple"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_keyguard_unlock_fail_redraw","Unlock failed, please re- draw"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_update_private_space","Updated Privacy Space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_keyguard_setting_pattern","Setting Graphic unlock password"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_keyguard_setting_unreal_pattern","Pattern lock password is set false"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_MainPage_Title_PrivatePhone","Privacy contacts"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_MainPage_Title_Photo","Image Encryption"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_MainPage_Title_AppLock","Program Lock"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_MainPage_Title_Video","Video Encryption"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_MainPage_Title_File","File Encryption"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_lock_promptChangeLevel","Changing the graphics lock level"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_lock_promptResetGraph","Reset"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_add","Add"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_add_fake_users","Add fake account"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_warm_tips","Tips"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_add_fakeUser_warning","Set false users, safety quiz fail, continue to set?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_ok","Determine"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_cancel","Cancel"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_title_individual","Privacy Space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_lock_settings","Lock settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_download_privatespace","Please download the latest version of the Privacy Space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_download_privatespace_default","The module is being upgraded, so stay tuned..."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_download_dialog_message","Soon as you download the privacy space Your program with files being more secure protection, whether to continue ?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_upgrade_dialog_message","Soon as you update the Privacy Space Whether to continue ?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_install_fail","Privacy spatial installation fails"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_setting_qasummary","Since setting a false password, security question failure"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "private_sms_unread","Unread"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_RecommendScan","Protect your phone's security, physical examination immediately"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_RecommendScan_LongTime","Long time no examination, let 's see it masters"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_JustScanned","Just over physical examination, an easy"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_LastScanTitle","Last examination time in %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_ScanNow","Immediate Acceleration"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_OptimizeItem","Need to optimize"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_SecureItem","Security"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_DangerItem","Danger"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Cancel","Cancel"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Return","Return"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_OneClickOptimize","OneClick optimization"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Checkup","Oneclick Acceleration"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Now_Checking","Checking"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Again","Re- examination"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Checkup_Result","Examination results"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Prepare","Preparing examination"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Optimization_Finish","Congratulations, your phone is fine"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Back_Warn_Title","Exit examination?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Back_Warn_Content","Examination has not been completed, whether you want to exit Acceleration examination?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Start","Examination begins"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Configs","Checking Configuration"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_HIPS","Checking for active defense services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_HIPS_Name","Active defense services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Phone","Checking communication Firewall Service"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Phone_Name","Communication Firewall Service"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_DataPlan","Checking traffic package settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_DataPlan_Unlimited","Dataplan is not set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_DataPlan_Name","Dataplan has been set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_DataUsage","Checking traffic packages usage"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_DataUsage_OutPlan","Traffic this month has been exceeded"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_DataUsage_Alarm","Traffic has more than 90 percent this month"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_DataUsage_Name","This month used data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Traffic","Checking Traffic Monitor services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Traffic_Name","Traffic Monitor services"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Traffic_Disabled","Mobile network is turned off"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Network","Checking cloud killing settings"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Network_Name","Cloud killing"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Service","Checking security service from the start setting"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Service_Name","Security service from the start"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_RunningApp","Checking system is currently running task"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_RunningApp_Noroot","Background applications have been processed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_RunningApp_Name","%1$d Background applications,memory remaining %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_RunningApp_Fixed","End %1$d Tasks %2$s Memory"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Cache_App","Scanning cache :%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Virus_Scan_name","Virus Scan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Virus_Scan_Start","Start a virus scan"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Virus_Scan_End","Virus scanning is finished"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Virus_Scan_Failed","Virus scan failed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Virus_Scan","Scanning for viruses :%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_VirusDetail","In %1$s threat detected %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_VirusDetail_Warning","In %1$s risk detected %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Virus_Fixed","Cleared"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Virus_NoVirus","No threat"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Cache","Scanning cache"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Cache_NoRoot","Application Cache check"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Cache_Name","Application Cache Total %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Cache_Fixed","Actual cleanup cache %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_AutoBoot_OK","You've just configured software from start"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_AutoBoot","Scanning software from the start"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_AutoBoot_Name","%1$d may start on boot"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Update_Time","Checking for update"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Update_Time_None","You never checked software updates"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Update_Time_Name","Check for updates in the last %d days ago"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Update_Time_Fixed","Checked"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Update_Time_Check","Security master version update"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Update_Time_Checked","You have checked version update"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Check_Fixed_Loophole","You've just repaired vulnerabilities"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Result_Excellent","Mobile has been optimized to perfection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Result_Good","Almost done, please continue to optimize"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Result_Poor","Phone there are more risks, please Optimize Now"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Alone","Some items require you to individually optimized"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Click_Show_Check_Detail","Click to view Acceleration details"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Need_Manual_Optimize","Some items require you to manually optimize"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Have_No_Scan_Result","No examination results"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Hava_Sys_Loophole","System security vulnerability exists"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Log_Check_Cache_InstallApp","Clean installation package cache %1$s (%2$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Clean_Cache","Clear the cache"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Clean_CacheFile","Clean up junk files"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Clean_Thumb","Cleanup Thumbnails"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Clean_EnptyDir","Cleaning up empty directories"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Scan_Perfect_Not_Need_Check","Reached the optimum state, without examination"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Service_ServiceStarted","LBE Security Master is protecting your"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Service_HIPS_AcceptEvent","Allow %1$s%2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Service_HIPS_RejectEvent","Reject to %1$s%2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Service_TrafficMon_Stop","Traffic Monitoring is disabled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Service_TrafficMon_None","Traffic Monitoring is not set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Service_TrafficMon_Start","Traffic monitoring is running"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Service_TrafficMon_Event","Today :%1$s remaining :%2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Service_TrafficMon_Event_Exceed","Today :%1$s exceeded :%2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Service_TrafficMon_Event_Unlimited","Today :%1$s Month :%2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr","App Manager"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Permission_Manage","Permission manager"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysApk","Built-in software systems"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Recommend_Retain","Cautious unloading"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Ram_Warning","Memory usage is too high, oh"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Rom_Saving","Actual saving memory space %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Rom_Waste","Memory space actually occupied by %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Cache_Used","Other data %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Retain","%1$s <font color=#FF7E00>%2$s</font>"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppPerm_Tip","<font color=#17A4F5>active defense </font> to help you control the software Permission"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppUninstall_Tip","<font color=#17A4F5>%1$d apks </font> User Software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_Tip","<font color=#17A4F5>%1$d apks </font> preinstalled software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppMove_Clean","Your system is very clean, <font color=#17A4F5> without </font> Software Moving"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppMove_Suggest1","<font color=#17A4F5>%1$d </font> Software recommends moved to SD card"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppMove_Suggest2","Without moving, <font color=#17A4F5>%1$d </font> software has been on the SD card"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SdApk_LongAgo","<font color=#17A4F5> long time </font> SD card not managed the installation package"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SdApk_DaysAgo","Last SD card installation package management is <font color=#17A4F5>%1$d days</font> ago"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SdApk_Today","<font color=#17A4F5>Today</font> has collated SD card installed package"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Can_Opt","<font color=#17A4F5 recommend optimization </font>"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App_OptDesc1","%1$d key permissions, <font color=#17A4F5>%2$d </font> item shuts down, <font color=#17A4F5%3$d </font> proposal to open"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App_OptDesc2","%1$d key permissions, <font color=#17A4F5>%2$d </font> item shuts down"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App_OptDesc3","%1$d key permissions, <font color=#17A4F5>%2$d </font> proposal to open"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App_OptedDesc","%1$d key permissions, <font color=#17A4F5>%2$d </font> items have been optimized"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Order","Select Sort by"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_NewApp","Configurable Software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Signature_Error","%1$s ( Certified exception )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Down_Install","%1$s ( downgrade installations )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_NewApp_Configuration","%1$d can be optimized"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "sm_sau_may_uninstall","You can uninstall"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "sm_sau_recommend_uninstall","Recommend uninstalling"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "sm_sau_careful_uninstall","Cautious unloading"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppUninstall","Software uninstall"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppUninstall_Des","Third-party applications offload non-System Preferences"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppUninstall_Recycle","Recycle"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppUninstall_Action","Uninstall the selected software (%1$d models )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppUninstall_Uninstalling","Uninstalling :%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppUninstall_ClearCache","Cleared %1$s SD card cache"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppUninstall_StartClear","Empty the SD card is uninstalled software cache"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppUninstall_SDCleanPrompt","Whether uninstall %1$d one is selected the software?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppUninstall_Uninstall","Uninstall"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppUninstall_SysWarning","Uninstalling system built-in software may cause serious consequences.  click the Unlock button to continue. "); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall","Pre-installed software uninstall"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_Des","Built-in system pre-installed software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_HIPS_Required","Active defense service is not turned on, the system software can not be uninstalled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_RecycleBin","Recycle"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_EnterRecycleBin","Into the recycle bin"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_Uninstalling","Uninstalling :%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_Restore","Being restored :%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_Restore_Result","Successful recovery of pre-installed software %1$s one, two failed %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_UninsFail","Uninstall Failed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_RootClean","LBE Security Master has helped you to uninstall %1$s, as you release the %2$s system space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_RootClean2","LBE Security Master has helped you to uninstall %1$s, reducing the burden on the system."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_FreezeClean","LBE Security Master is to help you freeze %1$s, reducing the burden on the system."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_RFail","Restore failed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Uninstall_UsrFail","Uninstall Failed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppPermission","Software Permission manager"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppPermission2","Scanning software Permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppPermission_opted","Has been optimized (%1$s)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppPermission_Suggest_Reject","Proposed to prohibit"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppPermission_Suggest_Accept","Recommended to allow"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_AppPermission_Suggest_Others","Need to check"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_NoApp","The software does not meet the conditions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD","Moving Software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_Des","The application moves from memory to the SD card"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_Suggest","Recommends moving"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_Moving","Moving :%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_Phone","Internal Software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_SD","Memory Card Software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_BeforeFroyo","Your phone does not support moving the software to the memory card ! Please upgrade your phone system"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_NoSD","You do not have a memory card installed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_ToPhone","Move the selected software to the phone (%1$d models )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_ToSD","Move the selected software to the memory card (%1$d models )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_ToSD_Warning","\"%1$s\" software itself does not recommend that you move to the SD card to run, forced to move may cause the software to run an unknown error."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_Phone_Empty","You can move your phone software not found"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_SD_Empty","Memory card, you can move the software was not found"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_Emulated","Your phone has a built-in storage, no software to move"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_MIUIV5","Please note: Your phone system MIUI V5, in the part of the development version, restart the phone after moving the software, the software will disappear, be careful to use this feature. Or cancel use ."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_ERR_NOMEM","Lack of space, moving failed (%1$s)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_ERR_NOEXIST","%1$s does not exist, can not move"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_ERR_SYSTEM","System Software (%1$s), can not move"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_ERR_LOCKED","%1$s has been locked temporarily unable to move"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_ERR_INVLOC","%1$s can not be moved to the specified location"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_ERR_INTERN","Internal error, moving failed (%1$s)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_ERR_ALREADY","%1$s is moving in"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App2SD_ERR_GENERAL","Failed to move %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_UWarning","Please note: You uninstall the software, the file containing the optimized acceleration (odex), to restore to other systems or devices through recovery mode, there may not be available. "); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_RWarning","Please note: Your recovery software, optimized to accelerate file containing (odex), if obtained from other systems or equipment, may not be available. "); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_Summary","Total %1$d models software has been uninstalled %2$d models of software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_Disable","Disable Select Software (%1$d models )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_Enable","Select Recovery Software (%1$d models )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_Guide","This feature is only for advanced users ! Security master can help you clean up the system junk software that comes with But accidentally deleted critical software may cause the system crash Use caution !"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_Warning","You sure you want to uninstall the software? If the system is not working properly after uninstallation, manually restore from the Recycle Bin"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_InstallWarning","System space remaining %1$s The application you choose to resume least %2$s space Note that when the system is out of space, it will cause the recovery to fail. Are you sure you want to restore the selected application ?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_NoSpace","Insufficient system space, free space or choose other smaller systems installation package recovery."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_Disabled_Empty","No software is streamlined system"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_Enabled_Empty","No no uninstall software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_NoSD","System software uninstall need to backup to SD card Please retry installed SD"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SysUninstall_AlreadyUninstall","Uninstalled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App_UnknownSize","Unknown size"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper","Installation package management"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_Des","Search SD card installation package file to install and delete"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_Scan","Searching"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_cancel","Stop"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_InnerSD","Located in built-in storage"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_DefaultSD","In standard SD Card"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_ExternSD","In the extended SD card"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_DeleteWait","Whether to delete the selected installation package (%1$d a )"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_Result","%1$d a successful installation. %2$d mounting failures, failures are listed below:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_InstallWarning","Phone memory space remaining %1$s, failed to install significant. Recommends uninstalling or application to move through the application, the release of memory space and try again. Are you sure you want to install the selected application do ?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_StartInstall","Installing"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_StartDelete","Start deleting"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_Install","Installation (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_SkipDifSig","%1$d signatures different installation to be skipped, please uninstall before installing."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_InstallWait","The following installation packages you want to install because of signature or version issue, the need to replace the installation will cause the old data is lost. Please click OK to start the replacement installation, or click Cancel to exit "); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_Selected","%1$d is selected one installation package."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_Delete","Delete (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_Installed","Installed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_Frozen","Frozen"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_NotInstalled","Not Installed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_ApkInfo","%1$s Installation package name : %2$s Storage path : %3$s Last Modified: %4$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_Type","Installation package classification"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_OldVer","Old versions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_NewVer","New version"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_DifSig","Certification exception"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_SigChecking","Signature check"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_NoApk","Your SD card has no APK installation package."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_NoFile","Removed %1$d invalid APK installation package."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_SelectOldVer","Select the old version"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_SelectNewVer","Select the new version"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_SDHelper_SelectDifSig","Choose a different signature"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_OneKey_Optimize","OneClick optimization"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_All_Apks","All Software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Recommend_Opt","Recommended Optimization"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Opted","Has been optimized"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_CanOpt_Count","%1$d apps"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Opted_Count","%1$d models have been optimized"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Already_Reject_Install","Has refused to install"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Already_Uninstall","Not Installed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Uninstall_Selected_Software","Uninstall the selected software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Confirm_Uninstall_Software","Uninstall %1$s？"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Add_USB_Blacklist","At the same time the software is installed automatically added to blacklist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_USB_Blacklist_Desc","Description: Add to blacklist after the software will no longer be allowed to install this on the phone."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_No_USB_Install_Log","No automatic installation log"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Clear_Log","Empty log"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Install_Manage_Log","Automatic software installation log"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_USB_Install_Blacklist","Software installed automatically blacklist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_USB_Install_Manage_Mode_Choice","Automatically install software management mode selection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Current_Mode","Installation Management:"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Add_Blacklist","Add blacklist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Add_Blacklist_Numberic","Blacklist (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Remove_Blacklist","Remove blacklist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Remove_Blacklist_Numberic","Remove blacklist(%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Add_Blacklist_Desc","Added to the blacklist, it will uninstall the software, and no longer allow this software installed on the phone."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Add_Blacklist_Desc_Second","Added to the blacklist, it will no longer be allowed to automatically install the software on your phone."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Apps_Auto_Install_Manage","Automatic Installation Monitoring"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_PC_Client_From","Installed from PC"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_PC_Client","PC-side tools"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Unknown","Unknown"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_From","By the %1$s installation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Confirm_Install_This_App","Confirm installation<font color=#17A4F5>%1$s</font>？"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Already_On","Enabled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Already_Off","Disabled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App_Install_Manage_Service","Automatic installation of monitoring software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_App_Install_Manage_Service_Tips","How to optimize all installed Software? Open the software automatically installed monitoring, I will help you solve"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Add_Blacklist_Success","Successful blacklist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Add_Blacklist_Fail","Add blacklist failed!"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Monitor_Mode","Monitor Mode"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Blacklist","Blacklist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Confirm_Remove","Confirm removal from the blacklist %1$s?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SoftMgr_Already_Optimized","Optimized"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt","Phone Accelerate"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Backup","Since the launch of the housekeeper and the White List Task"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Task_Running_Tip","<font color=#FF7E00>%1$d</font> pending cleanup tasks"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_AutoBoot_Tip","<font color=#FF7E00>%1$d</font> Applications background / boot from start, the proposed treatment"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_AutoBoot_Tip2","<font color=#FF7E00>%1$d</font> Applications from start monitoring"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_White_Tip","<font color=#FF7E00>%1$d</font> Applications in the whitelist protection"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_Tip1","<font color=#FF7E00>A long time </font> since check for garbage"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_Tip2","Last garbage check <font color=#FF7E00>%1$d days</font> ago"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_Tip3","Congratulations, checked today for garbage"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr","Task Management"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_Des","Background task management, monitoring memory, CPU occupancy"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_RunningApp","Operation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_Action","OneClick accelerate (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_Action_Normal","OneClick Optimize"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_Action_Select","Please select the task you want to end"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_Result","%1$d end tasks, freeing up memory %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_Best_State_Tips","Has reached the optimum state"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Boost","Autostart Manager"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Boost_Des","Manage boot and application startup background"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Boost_AppWidget","You are using %1$s desktop plug-ins. To avoid Desktop exception from start housekeeper does not intercept the desktop plug-in applications . Please remove %1$s desktop plug and try again"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Boost_Service","System is using %1$s to provide critical services ( input method ) . To avoid mobile paralyzed from start housekeeper does not intercept these applications."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Boost_ShowSystem","WARNING ! Modify system software settings may cause the phone to crash Please click the unlock button to proceed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Boost_Boot","Boot from start"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Boost_Receiver","Run Background"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Boost_Deblocking","Unlock"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Boost_None","Congratulations! No self-starting applications"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TrustApp","Request permission to trust this software"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_UntrustApp","The software monitors permission request"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Boot_Permission","Boot launch permissions"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_RejectBootStart","Forbidden boot from start, Forbidden run Background"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_RejectAutoStart","Forbidden run Background"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_AllowBootStart","Allow boot from start, Allow run background"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_AllowAutoStart","Allow run background"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_RejectNotif","Block pop-up message notification bar"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_AllowNotif","Allow pop-up message notification bar"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Clean","Clean trash"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Clean_Des","Check the SD card to clean junk files and system cache"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_Sys","Software cache"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_SD","Residual files"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_File","Junk Files"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_Sys_Cleaned_Toast","Congratulations, you've cleaned up the software cache, the total clearing cache file %1$s, you can shoot more than %2$d HD photos."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_Sys_Cleaned_Toast_Normal","Congratulations, you\'ve finished cleaning software cache, the total clean-up cache files %1$s."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_SD_Cleaned_Toast","Congratulations, you've cleaned up the remaining documents, the total clean up residual files %1$s, you can shoot more than %2$d HD photos . Please keep cleaning residues .."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_SD_Cleaned_Toast_Normal","Congratulations, you\'ve finished cleaning up residual files, the total clean up residual files%1$s. Please maintain regular cleaning residues."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_File_Cleaned_Toast","Congratulations, you've finished cleaning up junk files, the total clean up junk files %1$s, you can shoot more than %2$d HD photos . Please keep your rubbish .."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_File_Cleaned_Toast_Normal","Congratulations, you\'ve finished cleaning up junk files, the total clean up junk files%1$s. Please maintain regularly."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_CacheClean","Cache removal (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Clean_Scanning","Scanning"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Clean_Scanning_Init","Scan started, please wait a moment"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_SD_More_Package","%1$s, etc"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_Sys_AppsCount","Software system cache %1$d"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_SD_AppsCount","Software SD cache %1$d"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Selected_SizeHuge","Directory of your choice larger files, clean up may also need to remove some of the data, make sure that you selected."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Cache_None","Congratulations ! Your mobile phone is very clean, no cache file remains."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Residual_None","Congratulations ! Your mobile phone is very clean, no residual files after uninstalling the software."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Rubbish_None","Congratulations ! Your mobile phone is very clean, no useless junk files remain."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Uninstall_Left","LBE Security Master detects the following software has been uninstalled, but still remained on the SD card, temporary files, whether to clear"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_EmptyFolder","%1$d empty directories"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Des_EmptyFolder","No respite free catalog"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_ThumbFile","%1$d pictures thumbnails"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Des_ThumbFile","System-generated photo thumbnails"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_LogFile","%1$d debug files"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Des_LogFile","Software debug file generated when running"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_WindowFile","%1$d desktops system configuration files"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Des_WindowFile","Desktop configuration files generated by the system"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_WhiteWithWidgets_Remove","The existence of a desktop application or system component plug-ins, removed from the whitelist"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_WhiteWithWidgets_Clean","The existence of a desktop application or system component plug-ins, forced the closure could lead to a black screen to restart the desktop"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_White","Whitelist task"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_CPU","CPU:%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_RAM","Memory :%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_WhiteEmpty","You have not configured whitelist application"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_Critical","Mission-critical"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_AddToWhite","Add white list"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_ToWhiteList","Add white list (%1$d)"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_TaskMgr_AddWhite","WhiteList"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_WhiteList_Tips","Protect your mission, not to be OneClick clean-up"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Hardware","Device details"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Hardware_Basic","Basic Information"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Hardware_CPU_Storage","CPU"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Hardware_Network","Network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Hardware_Display","Show"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Hardware_Device_Other","Sensor"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Hardware_Device_Rank","Rank Information"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Hardware_Antutu_Tips","Starred data from security Antutu"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Running_Memory","Running out of Memory: <font color=#40C0FF>%1$s</font>"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_DisplayDetails","<u> Details   </ u>"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Hardware_Brand","Brand"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "SysOpt_Hardware_Internet_Tips","Networking for more information"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update","Check for updates"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_sr","Updates"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Main_Title","LBE Security Master update"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_VirusPattern_Title","Virus database update"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_VirusEngine_Title","Virus detection engine updates"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_VirusPattern_Desc","Updating to %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_AdwarePattern_Title","Advertising Database Update"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_AdwarePattern_Desc","Updating to %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Plugin_Title","%1$s updated"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_AdwareSet_Title","Advertising sample update"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Download","Download Upgrade"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Download_Main","Official website upgrade"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Download_Channel","%1$s upgrade"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Download_Channel_Install","Download %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Auto_NewVirusDb","LBE Security Master virus database update released"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Auto_NewMainVer","LBE Security Master has released an updated version of"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Auto_NewAdwareSetVer","LBE Security Master repository has released updated ads"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Auto_NewPlugin","%1$s updated version has been released"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Auto_Detail","Click here to update to version %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_MainVersion","LBE Security Master %1$s updated version has been released, whether to immediately download the update ? %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_VirusPattern","Virus database update version %1$s has been released, whether immediately download the update ? %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_VirusEngine","Virus Engine %1$s has been released. Update now ? %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_AdwareSet","Ad Library %1$s updated version has been released, whether immediately download the update ? %2$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Plugin","%1$s %2$s updated version has been released, whether to immediately download the update ? %3$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_NoUpdate","You are already using the latest version."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_VirusPattern_Finish","Your virus database has been upgraded to the latest version :%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Check","Checking for updates..."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Avaliable","Updatable"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Software","Software Updates"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Close","Close"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Privacy_Space","Privacy Space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Anti_Theft","Antitheft"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Component_Main","LBE Security Master"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Component_VirusPattern","Virus database"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Component_VirusEngine","Virus Engine"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Component_AdwarePattern","Ad Library"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Component_Private_Space","Privacy Space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Component_AntiTheft","Antitheft"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Hint","Downloading %1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Progress","Completed %1$s, %2$s total"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Failed","%1$s download failed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Background","Background Download"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Cancel","Cancel download"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Reason_NOSDCARD","Please insert the SD card to complete the download operation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Reason_NETWORKFAILURE","Network is unavailable, please try again later"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Reason_SERVERFAILURE","Server maintenance, please try again later"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Reason_RETRYFAILURE","Download failed, please try again later"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_State_ENQUEUE","Has been added to the download queue"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_State_RUNNING","Downloading"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_State_INTERRUPTED","Download canceled"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_State_FAILED","Download failed"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_State_SUCCEED","Download Success"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_State_RETRY","Download error, retrying"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Update_Upto_Latest","Is the latest version"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Error_File_Error","Missing or full file system"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Error_Unhandled_Http_Code","Unable to process the request"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Error_Http_Data_Error","Data processing error"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Error_TooMany_Redirects","Too many redirects"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Error_Insufficient_Space","Not enough storage space"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Error_Device_Not_Found","SD card unmounted"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Error_Cannot_Resume","Can not continue to download"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Error_File_Already_Exists","File already exists"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "DownloadManager_Error_Unknown","Unknown error"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Graph_Trend","Traffic Chart"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Graph_Detail","Daily traffic details"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Graph_Legend_Limit","Traffic Limit"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Graph_Legend_Limit_Notset","Not set"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Graph_Legend_Month","This month"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Graph_Legend_Today","Used today"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Traffic_Graph_Legend_Projection","Expected this month"); } catch(RuntimeException e) { };

//new since 5.1.5202
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SendMMS","send MMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SendMMS_Desc","directly send MMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_SendMMS_Hint","%1$s may send MMS"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_MMS","MMS records"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_MMS_Desc","Access your MMS inbox"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_MMS_Hint","%1$s may access the MMS Inbox"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_AudioRecorder","Audio Recording"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_AudioRecorder_Desc","Local Call and Audio recording"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_AudioRecorder_Hint","%1$s may record Calls and Audio"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Mobile_Connectivity","Use mobile networks"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Mobile_Connectivity_Desc","Use mobile networks"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Mobile_Connectivity_Hint","%1$s may use mobile network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_WIFI_Connectivity","Use WIFI"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_WIFI_Connectivity_Desc","Use WIFI"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_WIFI_Connectivity_Hint","%1$s may use WIFI Network"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Bluetooth_Connectivity","turn on Bluetooth"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Bluetooth_Connectivity_Desc","turn on Bluetooth"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Bluetooth_Connectivity_Hint","%1$s may use Bluetooth"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_MMS_Access","read MMS data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Recorder_Camera","photos"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Recorder_VoiceCall","recorded call audio"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "thanks_tips","thank these lovely user help LBE progress ^ _ ^ WIHOUT%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Desktop_Traffic_Month_Hint","month :%1$s"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_Database_Marker_Name_Correction","number of error correction"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_correction_no_data","no need correcting numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Phone_correction_delete_tips","you sure you want to delete this number ?"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_page_title","number service Guinness"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_search_hint","enter the keyword to see more"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_city_unknow","unknown"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_select_city","select cities !"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_select_city_hit","Enter city or Pinyin"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_category_locale","local life service"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_category_food","Dining"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_category_funny","Recreation"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_category_mail","courier service"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_category_order","takeaway ordering"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_category_sport","sports and fitness"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_category_order_other","takeaway hotline"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_select_city_title","Select City"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_home_load_category_failed","failed to load !"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_no_more_category","not find more categories !"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_api_or_secret_key_missing","Please enter API key or SECRET keySS!"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_city_select_load_failed","did not find the appropriate city !"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_search_list_title","search keywords"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_search_empty","did not find relevant data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_search_input_key_words","Enter search keywords"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_call_count_1","%.1f people call"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_call_count_2","%d people call"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_shop_detail","merchant Details"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_load_more","load more data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_loading_data","Loading data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_no_more_data","no more data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_shop_correct","error correction"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_shop_loading","Loading ..."); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_shop_server_error","server error !"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_shop_server_client","client requests mistake !"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_shop_request_error","access error !"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_correction_shop_profile","Modify Contact Information"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_correction_add_or_modify_number","add or modify numbers"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_correction_other_problem","other problems"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_correction_name_incorrection","business name is incorrect"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_correction_modify_profile","corrections Merchant Other Information"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_correction_private_phone","private number"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_shop_for_detail","Details Introduction"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_no_such_data","did not find relevant data"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_currennt_network_unavailable","current network is unavailable"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_server_error","server error friends"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_server_timeout","connection timed out, please try again"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_data_supported","data from the"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "yellow_data_supported_by","provide"); } catch(RuntimeException e) { };

// new since 5.1.5310
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_VideoRecorder","Pictures and Video"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_VideoRecorder_Desc","May take Pictures and Video"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_VideoRecorder_Hint","%1$s may take Pictures and record Video"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Recorder_AudioVideo","Record Audio and Video"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Recorder_Video","Record Videoo"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "HIPS_Perm_Recorder_Audio","Record Audio"); } catch(RuntimeException e) { };
    
try { resparam.res.setReplacement("com.lbe.security", "string", "private_netword_not_connected","Download the updated privacy space to use this feature "); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "phone_restore_fail_message","Confirm whether there are other applications, blocking SMS or SMS records!"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "phone_restore_fail_title","Restore failed!"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "Home_Sepcial_Thanks_Title","Special Thanks"); } catch(RuntimeException e) { };
try { resparam.res.setReplacement("com.lbe.security", "string", "boot_time_notification","Boottime is %1$s seconds"); } catch(RuntimeException e) { };


    }

}